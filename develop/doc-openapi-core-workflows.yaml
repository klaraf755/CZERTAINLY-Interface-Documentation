openapi: 3.0.1
info:
  title: CZERTAINLY Rules API
  description: REST API for managing workflows resources in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: info@czertainly.com
  license:
    name: MIT License
    url: https://github.com/CZERTAINLY/CZERTAINLY/blob/develop/LICENSE.md
  version: 2.14.0
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:40057
  description: Generated server url
tags:
- name: Workflow Actions Management
  description: Workflow Actions Management API
- name: Workflow Rules Management
  description: Workflow Rules Management API
- name: Workflow Triggers Management
  description: Workflow Triggers Management API
paths:
  /v1/workflows/triggers/{triggerUuid}:
    get:
      tags:
      - Workflow Triggers Management
      summary: Get Trigger details
      operationId: getTrigger
      parameters:
      - name: triggerUuid
        in: path
        description: Trigger UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Trigger details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TriggerDetailDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    put:
      tags:
      - Workflow Triggers Management
      summary: Update Trigger
      operationId: updateTrigger
      parameters:
      - name: triggerUuid
        in: path
        description: Trigger UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTriggerRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: Trigger updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TriggerDetailDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    delete:
      tags:
      - Workflow Triggers Management
      summary: Delete Trigger
      operationId: deleteTrigger
      parameters:
      - name: triggerUuid
        in: path
        description: Trigger UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Trigger deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/rules/{ruleUuid}:
    get:
      tags:
      - Workflow Rules Management
      summary: Get Rule details
      operationId: getRule
      parameters:
      - name: ruleUuid
        in: path
        description: Rule UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: Rule details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleDetailDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    put:
      tags:
      - Workflow Rules Management
      summary: Update Rule
      operationId: updateRule
      parameters:
      - name: ruleUuid
        in: path
        description: Rule UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRuleRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "200":
          description: Rule details updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleDetailDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    delete:
      tags:
      - Workflow Rules Management
      summary: Delete Rule
      operationId: deleteRule
      parameters:
      - name: ruleUuid
        in: path
        description: Rule UUID
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Rule deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/executions/{executionUuid}:
    get:
      tags:
      - Workflow Actions Management
      summary: Get Execution Details
      operationId: getExecution
      parameters:
      - name: executionUuid
        in: path
        description: Execution UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: Execution details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    put:
      tags:
      - Workflow Actions Management
      summary: Update Execution
      operationId: updateExecution
      parameters:
      - name: executionUuid
        in: path
        description: Execution UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateExecutionRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: Execution updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    delete:
      tags:
      - Workflow Actions Management
      summary: Delete Execution
      operationId: deleteExecution
      parameters:
      - name: executionUuid
        in: path
        description: Execution UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "204":
          description: Execution deleted
  /v1/workflows/conditions/{conditionUuid}:
    get:
      tags:
      - Workflow Rules Management
      summary: Get Condition details
      operationId: getCondition
      parameters:
      - name: conditionUuid
        in: path
        description: Condition UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "200":
          description: Condition details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConditionDto"
    put:
      tags:
      - Workflow Rules Management
      summary: Update Condition
      operationId: updateCondition
      parameters:
      - name: conditionUuid
        in: path
        description: Condition UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConditionRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: Condition updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConditionDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    delete:
      tags:
      - Workflow Rules Management
      summary: Delete Condition
      operationId: deleteCondition
      parameters:
      - name: conditionUuid
        in: path
        description: Condition UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "204":
          description: Condition deleted
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/actions/{actionUuid}:
    get:
      tags:
      - Workflow Actions Management
      summary: Get Action Details
      operationId: getAction
      parameters:
      - name: actionUuid
        in: path
        description: Action UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "200":
          description: Action details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionDetailDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    put:
      tags:
      - Workflow Actions Management
      summary: Update Action
      operationId: updateAction
      parameters:
      - name: actionUuid
        in: path
        description: Action UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateActionRequestDto"
        required: true
      responses:
        "200":
          description: Action updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionDetailDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    delete:
      tags:
      - Workflow Actions Management
      summary: Delete Action
      operationId: deleteAction
      parameters:
      - name: actionUuid
        in: path
        description: Action UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "204":
          description: Action deleted
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/triggers:
    get:
      tags:
      - Workflow Triggers Management
      summary: List Triggers
      operationId: listTriggers
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: "#/components/schemas/Resource"
      - name: eventResource
        in: query
        required: false
        schema:
          $ref: "#/components/schemas/Resource"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: List of triggers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TriggerDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    post:
      tags:
      - Workflow Triggers Management
      summary: Create Trigger
      operationId: createTrigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerRequestDto"
        required: true
      responses:
        "201":
          description: Trigger created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TriggerDetailDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/rules:
    get:
      tags:
      - Workflow Rules Management
      summary: List Rules
      operationId: listRules
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: "#/components/schemas/Resource"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: List of rules fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RuleDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    post:
      tags:
      - Workflow Rules Management
      summary: Create Rule
      operationId: createRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RuleRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "201":
          description: Rule created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RuleDetailDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/executions:
    get:
      tags:
      - Workflow Actions Management
      summary: List executions
      operationId: listExecutions
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: "#/components/schemas/Resource"
      responses:
        "200":
          description: List of executions fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExecutionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    post:
      tags:
      - Workflow Actions Management
      summary: Create Execution
      operationId: createExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecutionRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "201":
          description: Execution created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/conditions:
    get:
      tags:
      - Workflow Rules Management
      summary: List Conditions
      operationId: listConditions
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: "#/components/schemas/Resource"
      responses:
        "200":
          description: List of conditions fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConditionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    post:
      tags:
      - Workflow Rules Management
      summary: Create Condition
      operationId: createCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConditionRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "201":
          description: Condition created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConditionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/actions:
    get:
      tags:
      - Workflow Actions Management
      summary: List Actions
      operationId: listActions
      parameters:
      - name: resource
        in: query
        required: false
        schema:
          $ref: "#/components/schemas/Resource"
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "200":
          description: List of actions fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ActionDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
    post:
      tags:
      - Workflow Actions Management
      summary: Create Action
      operationId: createAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActionRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "201":
          description: Action created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionDetailDto"
        "500":
          description: Internal Server Error
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/triggers/{triggerUuid}/history/{associationObjectUuid}:
    get:
      tags:
      - Workflow Triggers Management
      summary: Get Trigger History
      operationId: getTriggerHistory
      parameters:
      - name: triggerUuid
        in: path
        description: Trigger UUID
        required: true
        schema:
          type: string
      - name: associationObjectUuid
        in: path
        description: Trigger Association Object UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: Trigger History retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TriggerHistoryDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
  /v1/workflows/triggers/history/{associationObjectUuid}:
    get:
      tags:
      - Workflow Triggers Management
      summary: Get Trigger History Summary
      operationId: getTriggerHistorySummary
      parameters:
      - name: associationObjectUuid
        in: path
        description: Trigger Association Object UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "200":
          description: Trigger History Summary retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TriggerHistorySummaryDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
components:
  schemas:
    Resource:
      type: string
      description: Type of the the trigger event source object
      enum:
      - NONE
      - dashboard
      - settings
      - auditLogs
      - credentials
      - connectors
      - attributes
      - jobs
      - notificationInstances
      - users
      - roles
      - acmeAccounts
      - acmeProfiles
      - scepProfiles
      - cmpProfiles
      - authorities
      - raProfiles
      - certificates
      - certificateRequests
      - groups
      - complianceProfiles
      - discoveries
      - entities
      - locations
      - tokenProfiles
      - tokens
      - keys
      - approvalProfiles
      - approvals
      - rules
      - actions
      - triggers
      - resources
      - resourceEvents
      - searchFilters
      - keyItems
      - platformEnums
      - notifications
      - conditions
      - executions
      - complianceRules
      - complianceGroups
      - customAttributes
      - globalMetadata
      - acmeOrders
      - acmeAuthorizations
      - acmeChallenges
      - cmpTransactions
      - endEntityProfiles
      - authenticationProviders
    TriggerType:
      type: string
      description: Type of the trigger
      enum:
      - event
      - manual
    UpdateTriggerRequestDto:
      required:
      - ignoreTrigger
      - resource
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the trigger
        type:
          $ref: "#/components/schemas/TriggerType"
        resource:
          $ref: "#/components/schemas/Resource"
        ignoreTrigger:
          type: boolean
          description: "Flag if to ignore object when trigger rules are matched and\
            \ do not perform any actions and stop evaluating other triggers. Based\
            \ on context could have other implications to object processing. If ignore\
            \ is set, trigger does not have any actions."
        event:
          type: string
          description: Event of the trigger
          enum:
          - discoveryFinished
        eventResource:
          $ref: "#/components/schemas/Resource"
        rulesUuids:
          type: array
          description: List of UUIDs of existing rules to add to the trigger
          items:
            type: string
            description: List of UUIDs of existing rules to add to the trigger
        actionsUuids:
          type: array
          description: List of UUIDs of existing actions to add to the trigger
          items:
            type: string
            description: List of UUIDs of existing actions to add to the trigger
    AuthenticationServiceExceptionDto:
      required:
      - code
      - message
      - statusCode
      type: object
      properties:
        statusCode:
          type: integer
          description: Status code of the HTTP Request
          format: int32
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
    ActionDetailDto:
      required:
      - executions
      - name
      - resource
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the action
        resource:
          $ref: "#/components/schemas/Resource"
        executions:
          type: array
          description: List of executions
          items:
            $ref: "#/components/schemas/ExecutionDto"
      description: List of Action Groups in the Rule Trigger
    ConditionDto:
      required:
      - items
      - name
      - resource
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the condition
        type:
          $ref: "#/components/schemas/ConditionType"
        resource:
          $ref: "#/components/schemas/Resource"
        items:
          type: array
          description: List of the condition items
          items:
            $ref: "#/components/schemas/ConditionItemDto"
      description: List of conditions in the Rule
    ConditionItemDto:
      required:
      - fieldIdentifier
      - fieldSource
      - operator
      type: object
      properties:
        fieldSource:
          $ref: "#/components/schemas/FilterFieldSource"
        fieldIdentifier:
          type: string
          description: Field identifier of the condition item
        operator:
          $ref: "#/components/schemas/FilterConditionOperator"
        value:
          type: object
          description: Value of the condition item
      description: List of the condition items
    ConditionType:
      type: string
      description: Type of the condition
      enum:
      - checkField
    ExecutionDto:
      required:
      - items
      - name
      - resource
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the execution
        type:
          $ref: "#/components/schemas/ExecutionType"
        resource:
          $ref: "#/components/schemas/Resource"
        items:
          type: array
          description: List of the execution items
          items:
            $ref: "#/components/schemas/ExecutionItemDto"
      description: List of executions
    ExecutionItemDto:
      required:
      - fieldIdentifier
      - fieldSource
      type: object
      properties:
        fieldSource:
          $ref: "#/components/schemas/FilterFieldSource"
        fieldIdentifier:
          type: string
          description: Field identifier of the execution item
        data:
          type: object
          description: Data of the execution item
      description: List of the execution items
    ExecutionType:
      type: string
      description: Type of the execution
      enum:
      - setField
    FilterConditionOperator:
      type: string
      description: Operator of the condition item
      enum:
      - EQUALS
      - NOT_EQUALS
      - GREATER
      - GREATER_OR_EQUAL
      - LESSER
      - LESSER_OR_EQUAL
      - CONTAINS
      - NOT_CONTAINS
      - STARTS_WITH
      - ENDS_WITH
      - EMPTY
      - NOT_EMPTY
      - SUCCESS
      - FAILED
      - UNKNOWN
      - NOT_CHECKED
    FilterFieldSource:
      type: string
      description: Source of the field in the execution item
      enum:
      - meta
      - custom
      - data
      - property
    RuleDetailDto:
      required:
      - conditions
      - name
      - resource
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Rule
        resource:
          $ref: "#/components/schemas/Resource"
        conditions:
          type: array
          description: List of conditions in the Rule
          items:
            $ref: "#/components/schemas/ConditionDto"
      description: List of Rules in the Rule Trigger
    TriggerDetailDto:
      required:
      - actions
      - ignoreTrigger
      - name
      - resource
      - rules
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the trigger
        type:
          $ref: "#/components/schemas/TriggerType"
        resource:
          $ref: "#/components/schemas/Resource"
        ignoreTrigger:
          type: boolean
          description: "Flag if to ignore object when trigger rules are matched and\
            \ do not perform any actions and stop evaluating other triggers. Based\
            \ on context could have other implications to object processing. If ignore\
            \ is set, trigger does not have any actions."
        event:
          type: string
          description: Event that should fire trigger
          enum:
          - discoveryFinished
        eventResource:
          $ref: "#/components/schemas/Resource"
        rules:
          type: array
          description: List of Rules in the Rule Trigger
          items:
            $ref: "#/components/schemas/RuleDetailDto"
        actions:
          type: array
          description: List of Action Groups in the Rule Trigger
          items:
            $ref: "#/components/schemas/ActionDetailDto"
    UpdateRuleRequestDto:
      required:
      - conditionsUuids
      type: object
      properties:
        description:
          type: string
          description: Description of the Rule
        conditionsUuids:
          type: array
          description: List of UUIDs of existing conditions to add to the rule
          items:
            type: string
            description: List of UUIDs of existing conditions to add to the rule
    ExecutionItemRequestDto:
      required:
      - fieldIdentifier
      - fieldSource
      type: object
      properties:
        fieldSource:
          $ref: "#/components/schemas/FilterFieldSource"
        fieldIdentifier:
          type: string
          description: Field identifier of the execution item
        data:
          type: object
          description: Data of the execution item
      description: List of the execution items to add to execution
    UpdateExecutionRequestDto:
      required:
      - items
      type: object
      properties:
        description:
          type: string
          description: Description of the execution
        items:
          type: array
          description: List of the execution items to add to execution
          items:
            $ref: "#/components/schemas/ExecutionItemRequestDto"
    ConditionItemRequestDto:
      required:
      - fieldIdentifier
      - fieldSource
      - operator
      type: object
      properties:
        fieldSource:
          $ref: "#/components/schemas/FilterFieldSource"
        fieldIdentifier:
          type: string
          description: Field identifier of the condition item
        operator:
          $ref: "#/components/schemas/FilterConditionOperator"
        value:
          type: object
          description: Value of the condition item
      description: List of the condition items to add to condition
    UpdateConditionRequestDto:
      required:
      - items
      type: object
      properties:
        description:
          type: string
          description: Description of the condition
        items:
          type: array
          description: List of the condition items to add to condition
          items:
            $ref: "#/components/schemas/ConditionItemRequestDto"
    UpdateActionRequestDto:
      required:
      - executionsUuids
      type: object
      properties:
        description:
          type: string
          description: Description of the action
        executionsUuids:
          type: array
          description: List of UUIDs of existing executions to add to the action
          items:
            type: string
            description: List of UUIDs of existing executions to add to the action
    TriggerRequestDto:
      required:
      - ignoreTrigger
      - name
      - resource
      - type
      type: object
      properties:
        name:
          type: string
          description: Name of the trigger
        description:
          type: string
          description: Description of the trigger
        type:
          $ref: "#/components/schemas/TriggerType"
        resource:
          $ref: "#/components/schemas/Resource"
        ignoreTrigger:
          type: boolean
          description: "Flag if to ignore object when trigger rules are matched and\
            \ do not perform any actions and stop evaluating other triggers. Based\
            \ on context could have other implications to object processing. If ignore\
            \ is set, trigger does not have any actions."
        event:
          type: string
          description: Event that should fire trigger
          enum:
          - discoveryFinished
        eventResource:
          $ref: "#/components/schemas/Resource"
        rulesUuids:
          type: array
          description: List of UUIDs of existing rules to add to the trigger
          items:
            type: string
            description: List of UUIDs of existing rules to add to the trigger
        actionsUuids:
          type: array
          description: List of UUIDs of existing actions to add to the trigger
          items:
            type: string
            description: List of UUIDs of existing actions to add to the trigger
    RuleRequestDto:
      required:
      - conditionsUuids
      - name
      - resource
      type: object
      properties:
        name:
          type: string
          description: Name of the rule
        description:
          type: string
          description: Description of the rule
        resource:
          $ref: "#/components/schemas/Resource"
        conditionsUuids:
          type: array
          description: List of UUIDs of existing conditions to add to the rule
          items:
            type: string
            description: List of UUIDs of existing conditions to add to the rule
    ExecutionRequestDto:
      required:
      - items
      - name
      - resource
      - type
      type: object
      properties:
        name:
          type: string
          description: Name of the execution
        description:
          type: string
          description: Description of the execution
        type:
          $ref: "#/components/schemas/ExecutionType"
        resource:
          $ref: "#/components/schemas/Resource"
        items:
          type: array
          description: List of the execution items to add to execution
          items:
            $ref: "#/components/schemas/ExecutionItemRequestDto"
    ConditionRequestDto:
      required:
      - items
      - name
      - resource
      - type
      type: object
      properties:
        name:
          type: string
          description: Name of the condition
        description:
          type: string
          description: Description of the condition
        type:
          $ref: "#/components/schemas/ConditionType"
        resource:
          $ref: "#/components/schemas/Resource"
        items:
          type: array
          description: List of the condition items to add to condition
          items:
            $ref: "#/components/schemas/ConditionItemRequestDto"
    ActionRequestDto:
      required:
      - executionsUuids
      - name
      - resource
      type: object
      properties:
        name:
          type: string
          description: Name of the action
        description:
          type: string
          description: Description of the action
        resource:
          $ref: "#/components/schemas/Resource"
        executionsUuids:
          type: array
          description: List of UUIDs of existing executions to add to the action
          items:
            type: string
            description: List of UUIDs of existing executions to add to the action
    TriggerDto:
      required:
      - ignoreTrigger
      - name
      - resource
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the trigger
        type:
          $ref: "#/components/schemas/TriggerType"
        resource:
          $ref: "#/components/schemas/Resource"
        ignoreTrigger:
          type: boolean
          description: "Flag if to ignore object when trigger rules are matched and\
            \ do not perform any actions and stop evaluating other triggers. Based\
            \ on context could have other implications to object processing. If ignore\
            \ is set, trigger does not have any actions."
        event:
          type: string
          description: Event that should fire trigger
          enum:
          - discoveryFinished
        eventResource:
          $ref: "#/components/schemas/Resource"
    TriggerHistoryDto:
      required:
      - actionsPerformed
      - conditionsMatched
      - records
      - triggerUuid
      - triggeredAt
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
        triggerUuid:
          type: string
          description: UUID of the trigger.
        objectUuid:
          type: string
          description: UUID of the object that the trigger has been evaluated on.
        referenceObjectUuid:
          type: string
          description: Reference UUID of the object that the trigger has been evaluated
            on.
        conditionsMatched:
          type: boolean
          description: All conditions in the trigger have been matched.
        actionsPerformed:
          type: boolean
          description: All actions in the trigger have been performed.
        triggeredAt:
          type: string
          description: Time at which has the trigger been triggered
          format: date-time
        message:
          type: string
          description: 'Additional message. '
        records:
          type: array
          description: List of records for each action that has not been performed
            and each condition that has not been evaluated.
          items:
            $ref: "#/components/schemas/TriggerHistoryRecordDto"
    TriggerHistoryRecordDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Message with cause of action/condition failure.
        condition:
          $ref: "#/components/schemas/ConditionDto"
        execution:
          $ref: "#/components/schemas/ExecutionDto"
      description: List of records for each action that has not been performed and
        each condition that has not been evaluated.
    TriggerHistoryObjectSummaryDto:
      required:
      - ignored
      - matched
      - triggers
      type: object
      properties:
        objectUuid:
          type: string
          description: UUID of the object that the trigger has been evaluated on.
          format: uuid
        referenceObjectUuid:
          type: string
          description: Reference UUID of the object that the trigger has been evaluated
            on.
          format: uuid
        matched:
          type: boolean
          description: Was matched at least by one trigger.
        ignored:
          type: boolean
          description: Was matched by ignore trigger.
        triggers:
          type: array
          description: List of records for each trigger that has been evaluated.
          items:
            $ref: "#/components/schemas/TriggerHistoryObjectTriggerSummaryDto"
      description: List of history of objects that triggers has been evaluated on.
    TriggerHistoryObjectTriggerSummaryDto:
      required:
      - records
      - triggerName
      - triggerUuid
      - triggeredAt
      type: object
      properties:
        triggerUuid:
          type: string
          description: UUID of the object that the trigger has been evaluated on.
          format: uuid
        triggerName:
          type: string
          description: Reference UUID of the object that the trigger has been evaluated
            on.
        triggeredAt:
          type: string
          description: Time at which has the trigger been triggered
          format: date-time
        message:
          type: string
          description: 'Additional message. '
        records:
          type: array
          description: List of records for each action that has not been performed
            and each condition that has not been evaluated.
          items:
            $ref: "#/components/schemas/TriggerHistoryRecordDto"
      description: List of records for each trigger that has been evaluated.
    TriggerHistorySummaryDto:
      required:
      - associationObjectUuid
      - associationResource
      - objects
      - objectsEvaluated
      - objectsIgnored
      - objectsMatched
      - objectsResource
      type: object
      properties:
        associationResource:
          $ref: "#/components/schemas/Resource"
        associationObjectUuid:
          type: string
          description: UUID of the object associated with triggers.
        objectsResource:
          $ref: "#/components/schemas/Resource"
        objectsEvaluated:
          type: integer
          description: Number of objects evaluated.
          format: int32
        objectsMatched:
          type: integer
          description: Number of objects matched at least by one trigger.
          format: int32
        objectsIgnored:
          type: integer
          description: Number of objects matched by ignore triggers.
          format: int32
        objects:
          type: array
          description: List of history of objects that triggers has been evaluated
            on.
          items:
            $ref: "#/components/schemas/TriggerHistoryObjectSummaryDto"
    RuleDto:
      required:
      - name
      - resource
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Rule
        resource:
          $ref: "#/components/schemas/Resource"
    ActionDto:
      required:
      - name
      - resource
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the action
        resource:
          $ref: "#/components/schemas/Resource"
