openapi: 3.1.0
info:
  title: CZERTAINLY Client Operations API
  description: REST API for Client Operations
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: info@czertainly.com
  license:
    name: MIT License
    url: https://github.com/CZERTAINLY/CZERTAINLY/blob/develop/LICENSE.md
  version: 2.14.1-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:40989
  description: Generated server url
tags:
- name: Client Operations v2
  description: Client Operations v2 API
- name: Legacy Client Operations
  description: Client API for managing End Entities and Certificates
paths:
  /v1/operations/{raProfileName}/endentity/{username}/resetPassword:
    put:
      tags:
      - Legacy Client Operations
      summary: Reset password for End Entity
      operationId: resetPassword
      parameters:
      - name: raProfileName
        in: path
        description: RA Profile name
        required: true
        schema:
          type: string
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: End Entity password reset
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/certificates:
    post:
      tags:
      - Client Operations v2
      summary: Issue Certificate
      operationId: issueCertificate
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientCertificateSignRequestDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Certificate issued
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCertificateDataResponseDto"
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/certificates/{certificateUuid}/revoke:
    post:
      tags:
      - Client Operations v2
      summary: Revoke Certificate
      operationId: revokeCertificate
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      - name: certificateUuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientCertificateRevocationDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "204":
          description: Certificate revoked
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/certificates/{certificateUuid}/renew:
    post:
      tags:
      - Client Operations v2
      summary: Renew Certificate
      operationId: renewCertificate
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      - name: certificateUuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientCertificateRenewRequestDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "200":
          description: Certificate renewed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCertificateDataResponseDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/certificates/{certificateUuid}/rekey:
    post:
      tags:
      - Client Operations v2
      summary: Rekey Certificate
      operationId: rekeyCertificate
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      - name: certificateUuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientCertificateRekeyRequestDto"
        required: true
      responses:
        "200":
          description: Certificate regenerated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCertificateDataResponseDto"
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/certificates/{certificateUuid}/issue:
    post:
      tags:
      - Client Operations v2
      summary: Issue existing certificate with status Requested
      operationId: issueRequestedCertificate
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      - name: certificateUuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Certificate issued
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCertificateDataResponseDto"
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/attributes/revoke/validate:
    post:
      tags:
      - Client Operations v2
      summary: Validate revocation Attributes
      operationId: validateRevokeCertificateAttributes
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RequestAttributeDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Attributes validated
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/attributes/issue/validate:
    post:
      tags:
      - Client Operations v2
      summary: Validate issue Certificate Attributes
      operationId: validateIssueCertificateAttributes
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RequestAttributeDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Attributes validated
  /v1/operations/{raProfileName}/endentity:
    get:
      tags:
      - Legacy Client Operations
      summary: List all End Entities
      operationId: listEntities
      parameters:
      - name: raProfileName
        in: path
        description: RA Profile name
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "200":
          description: List of entities retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClientEndEntityDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
    post:
      tags:
      - Legacy Client Operations
      summary: Add End Entity
      operationId: addEndEntity
      parameters:
      - name: raProfileName
        in: path
        description: RA Profile name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientAddEndEntityRequestDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: End Entity added
  /v1/operations/{raProfileName}/endentity/{username}:
    get:
      tags:
      - Legacy Client Operations
      summary: Get End Entity information
      operationId: getEndEntity
      parameters:
      - name: raProfileName
        in: path
        description: RA Profile name
        required: true
        schema:
          type: string
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "200":
          description: End Entity detail retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientEndEntityDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
    post:
      tags:
      - Legacy Client Operations
      summary: Edit End Entity
      operationId: editEndEntity
      parameters:
      - name: raProfileName
        in: path
        description: RA Profile name
        required: true
        schema:
          type: string
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientEditEndEntityRequestDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: End Entity edited
    delete:
      tags:
      - Legacy Client Operations
      summary: Revoke all Certificates and delete End Entity
      operationId: revokeAndDeleteEndEntity
      parameters:
      - name: raProfileName
        in: path
        description: RA Profile name
        required: true
        schema:
          type: string
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: End Entity revoked and deleted
  /v1/operations/{raProfileName}/certificate/revoke:
    post:
      tags:
      - Legacy Client Operations
      summary: Revoke Certificate
      operationId: revokeCertificate_1
      parameters:
      - name: raProfileName
        in: path
        description: RA Profile name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LegacyClientCertificateRevocationDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Certificate revoked
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v1/operations/{raProfileName}/certificate/issue:
    post:
      tags:
      - Legacy Client Operations
      summary: Issue Certificate
      operationId: issueCertificate_1
      parameters:
      - name: raProfileName
        in: path
        description: RA Profile name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LegacyClientCertificateSignRequestDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Certificate issued
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCertificateSignResponseDto"
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/attributes/revoke:
    get:
      tags:
      - Client Operations v2
      summary: Get revocation Attributes
      operationId: listRevokeCertificateAttributes
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Attributes obtained
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BaseAttributeDto"
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/attributes/issue:
    get:
      tags:
      - Client Operations v2
      summary: Get issue Certificate Attributes
      operationId: listIssueCertificateAttributes
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Attributes list obtained
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BaseAttributeDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
components:
  schemas:
    AuthenticationServiceExceptionDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          description: Status code of the HTTP Request
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
      required:
      - code
      - message
      - statusCode
    ErrorMessageDto:
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
      required:
      - message
    AttributeCallback:
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          type: array
          description: Mappings for the callback method
          items:
            $ref: "#/components/schemas/AttributeCallbackMapping"
          uniqueItems: true
      required:
      - callbackContext
      - callbackMethod
      - mappings
    AttributeCallbackMapping:
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
        attributeContentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: 'Type of the attribute content. '
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: "#/components/schemas/AttributeValueTarget"
          uniqueItems: true
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      required:
      - targets
      - to
    AttributeConstraintType:
      type: string
      enum:
      - regExp
      - range
      - dateTime
    AttributeContentType:
      type: string
      enum:
      - string
      - text
      - integer
      - boolean
      - float
      - date
      - time
      - datetime
      - secret
      - file
      - credential
      - codeblock
      - object
    AttributeType:
      type: string
      enum:
      - data
      - group
      - info
      - meta
      - custom
    AttributeValueTarget:
      type: string
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraint:
      type: object
      description: Optional regular expressions and constraints used for validating
        the Attribute content
      oneOf:
      - $ref: "#/components/schemas/RegexpAttributeConstraint"
      - $ref: "#/components/schemas/RangeAttributeConstraint"
      - $ref: "#/components/schemas/DateTimeAttributeConstraint"
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: object
          description: Attribute Constraint Data
      required:
      - data
      - type
    BaseAttributeContentDto:
      type: object
      description: Base Attribute content definition
      oneOf:
      - $ref: "#/components/schemas/BooleanAttributeContent"
      - $ref: "#/components/schemas/CodeBlockAttributeContent"
      - $ref: "#/components/schemas/CredentialAttributeContent"
      - $ref: "#/components/schemas/DateAttributeContent"
      - $ref: "#/components/schemas/DateTimeAttributeContent"
      - $ref: "#/components/schemas/FileAttributeContent"
      - $ref: "#/components/schemas/FloatAttributeContent"
      - $ref: "#/components/schemas/IntegerAttributeContent"
      - $ref: "#/components/schemas/ObjectAttributeContent"
      - $ref: "#/components/schemas/SecretAttributeContent"
      - $ref: "#/components/schemas/StringAttributeContent"
      - $ref: "#/components/schemas/TextAttributeContent"
      - $ref: "#/components/schemas/TimeAttributeContent"
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      required:
      - data
    BooleanAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
      required:
      - data
    CertificateRequestFormat:
      type: string
      enum:
      - pkcs10
      - crmf
    ClientCertificateSignRequestDto:
      type: object
      properties:
        csrAttributes:
          type: array
          description: List of attributes to create CSR. Required if CSR is not provided
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        signatureAttributes:
          type: array
          description: List of attributes to sign the CSR
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        request:
          type: string
          description: Certificate signing request encoded as Base64 string
        format:
          $ref: "#/components/schemas/CertificateRequestFormat"
          default: pkcs10
          description: Certificate signing request format
        tokenProfileUuid:
          type: string
          format: uuid
          description: Token Profile UUID. Required if CSR is not uploaded
        keyUuid:
          type: string
          format: uuid
          description: Key UUID. Required if CSR is not uploaded
        attributes:
          type: array
          description: List of RA Profile related Attributes to issue Certificate
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
      required:
      - attributes
      - request
    CodeBlockAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CodeBlockAttributeContentData"
          description: CodeBlock attribute content data
      required:
      - data
    CodeBlockAttributeContentData:
      type: object
      properties:
        language:
          $ref: "#/components/schemas/ProgrammingLanguageEnum"
          description: Definition of programming languages used for code
          example: "JAVA, PHP, C, etc"
        code:
          type: string
          description: Block of the code in Base64. Formatting of the code is specified
            by variable language
      required:
      - code
      - language
    CredentialAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CredentialAttributeContentData"
          description: Credential attribute content data
      required:
      - data
    CredentialAttributeContentData:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: "#/components/schemas/DataAttribute"
      required:
      - attributes
      - kind
      - name
      - uuid
    DataAttribute:
      type: object
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/DataAttributeProperties"
          description: Properties of the Attributes
        constraints:
          type: array
          description: Optional regular expressions and constraints used for validating
            the Attribute content
          items:
            $ref: "#/components/schemas/BaseAttributeConstraint"
          oneOf:
          - $ref: "#/components/schemas/RegexpAttributeConstraint"
          - $ref: "#/components/schemas/RangeAttributeConstraint"
          - $ref: "#/components/schemas/DateTimeAttributeConstraint"
        attributeCallback:
          $ref: "#/components/schemas/AttributeCallback"
          description: Optional definition of callback for getting the content of
            the Attribute based on the action
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
    DataAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
    DateAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date
          description: Date attribute value in format yyyy-MM-dd
      required:
      - data
    DateTimeAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/DateTimeAttributeConstraintData"
          description: DateTime Range Attribute Constraint Data
      required:
      - type
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          format: date-time
          description: Start of the datetime for validation
        to:
          type: string
          format: date-time
          description: End of the datetime for validation
    DateTimeAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date-time
          description: DateTime attribute value in format yyyy-MM-ddTHH:mm:ss.SSSXXX
      required:
      - data
    FileAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/FileAttributeContentData"
          description: File attribute content data
      required:
      - data
    FileAttributeContentData:
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          type: string
          description: Type of the file uploaded
      required:
      - content
      - fileName
      - mimeType
    FloatAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          format: float
          description: Float attribute value
      required:
      - data
    IntegerAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          format: int32
          description: Integer attribute value
      required:
      - data
    ObjectAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
      required:
      - data
    ProgrammingLanguageEnum:
      type: string
      enum:
      - apacheconf
      - bash
      - basic
      - c
      - csharp
      - cpp
      - css
      - docker
      - fsharp
      - gherkin
      - git
      - go
      - graphql
      - html
      - http
      - ini
      - java
      - javascript
      - json
      - kotlin
      - latex
      - lisp
      - makefile
      - markdown
      - matlab
      - nginx
      - objectivec
      - perl
      - php
      - powershell
      - properties
      - python
      - ruby
      - rust
      - smalltalk
      - sql
      - typescript
      - vbnet
      - xquery
      - xml
      - yaml
    RangeAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/RangeAttributeConstraintData"
          description: Integer Range Attribute Constraint Data
      required:
      - type
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          format: int32
          description: Start of the range for validation
        to:
          type: integer
          format: int32
          description: End of the range for validation
    RegexpAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
      required:
      - type
    RequestAttributeDto:
      type: object
      description: Request attribute to send attribute content for object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
      required:
      - content
      - contentType
      - name
      - uuid
    SecretAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/SecretAttributeContentData"
          description: Secret attribute content data
      required:
      - data
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
    StringAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
      required:
      - data
    TextAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
      required:
      - data
    TimeAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Time attribute value in format HH:mm:ss
      required:
      - data
    ClientCertificateDataResponseDto:
      type: object
      properties:
        certificateData:
          type: string
          description: Base64 encoded Certificate content
        uuid:
          type: string
          description: UUID of Certificate
      required:
      - uuid
    CertificateRevocationReason:
      type: string
      enum:
      - unspecified
      - keyCompromise
      - cACompromise
      - affiliationChanged
      - superseded
      - cessationOfOperation
      - certificateHold
      - privilegeWithdrawn
      - aACompromise
    ClientCertificateRevocationDto:
      type: object
      properties:
        reason:
          $ref: "#/components/schemas/CertificateRevocationReason"
          default: UNSPECIFIED
          description: Reason for revocation
        attributes:
          type: array
          description: List of Attributes to revoke Certificate
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        destroyKey:
          type: boolean
          default: "false"
          description: Destroy Key upon successful revocation
      required:
      - attributes
    ClientCertificateRenewRequestDto:
      type: object
      properties:
        replaceInLocations:
          type: boolean
          default: "false"
          description: True to replace renewed certificate in the associated locations
        request:
          type: string
          description: "Certificate signing request encoded as Base64 string. If not\
            \ provided, Existing CSR will be used"
        format:
          $ref: "#/components/schemas/CertificateRequestFormat"
          default: pkcs10
          description: Certificate signing request format
    ClientCertificateRekeyRequestDto:
      type: object
      properties:
        replaceInLocations:
          type: boolean
          default: "false"
          description: True to replace renewed certificate in the associated locations
        request:
          type: string
          description: "Certificate signing request encoded as Base64 string. If not\
            \ provided, CSR attributes will be used"
        format:
          $ref: "#/components/schemas/CertificateRequestFormat"
          default: pkcs10
          description: Certificate signing request format
        keyUuid:
          type: string
          format: uuid
          description: Key UUID
        tokenProfileUuid:
          type: string
          format: uuid
          description: Token Profile UUID
        signatureAttributes:
          type: array
          description: "Signature Attributes. If not provided, existing attributes\
            \ will be used to generate the new CSR"
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
      required:
      - keyUuid
      - tokenProfileUuid
    ClientAddEndEntityRequestDto:
      type: object
      properties:
        raProfile:
          $ref: "#/components/schemas/RaProfileDto"
          description: RA profile related to End Entity
        email:
          type: string
          description: End Entity email
        extensionData:
          type: array
          description: End Entity extension data
          items:
            $ref: "#/components/schemas/EndEntityExtendedInfoDto"
        password:
          type: string
          description: End Entity password
        subjectAltName:
          type: string
          description: End Entity Subject alternative name
        subjectDN:
          type: string
          description: End Entity subject domain name
        username:
          type: string
          description: End Entity name
      required:
      - password
      - raProfile
      - subjectDN
      - username
    EndEntityExtendedInfoDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    RaProfileDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of RA Profile
        authorityInstanceUuid:
          type: string
          description: UUID of Authority provider
        authorityInstanceName:
          type: string
          description: Name of Authority instance
        legacyAuthority:
          type: boolean
          description: Has Authority of legacy authority provider
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        attributes:
          type: array
          description: List of RA Profiles attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        enabledProtocols:
          type: array
          description: List of protocols enabled
          items:
            type: string
      required:
      - authorityInstanceName
      - authorityInstanceUuid
      - enabled
      - name
      - uuid
    ResponseAttributeDto:
      type: object
      description: Response attribute with content for object it belongs to
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
      required:
      - contentType
      - label
      - name
      - type
    ClientEditEndEntityRequestDto:
      type: object
      properties:
        raProfile:
          $ref: "#/components/schemas/RaProfileDto"
          description: RA profile related to End Entity
        email:
          type: string
          description: End Entity email
        extensionData:
          type: array
          description: End Entity extension data
          items:
            $ref: "#/components/schemas/EndEntityExtendedInfoDto"
        password:
          type: string
          description: End Entity password
        subjectAltName:
          type: string
          description: End Entity Subject alternative name
        subjectDN:
          type: string
          description: End Entity subject domain name
        status:
          type: string
          description: End Entity Subject domain name
          enum:
          - NEW
          - FAILED
          - INITIALIZED
          - IN_PROCESS
          - GENERATED
          - REVOKED
          - HISTORICAL
          - KEY_RECOVERY
          - WAITING_FOR_ADD_APPROVAL
      required:
      - password
      - raProfile
      - status
      - subjectDN
    LegacyClientCertificateRevocationDto:
      type: object
      properties:
        certificateSN:
          type: string
          description: Certificate serial number
        issuerDN:
          type: string
          description: Issuer domain name
        reason:
          $ref: "#/components/schemas/CertificateRevocationReason"
          description: Revocation reason
      required:
      - certificateSN
      - issuerDN
      - reason
    LegacyClientCertificateSignRequestDto:
      type: object
      properties:
        password:
          type: string
          description: End Entity password
        pkcs10:
          type: string
          description: Certificate sign request (PKCS#10) encoded as Base64 string
        username:
          type: string
          description: End Entity username
      required:
      - password
      - pkcs10
      - username
    ClientCertificateSignResponseDto:
      type: object
      properties:
        certificateData:
          type: string
          description: Date of signed certificate
      required:
      - certificateData
    BaseAttributeDto:
      type: object
      description: Base Attribute definition
      discriminator:
        propertyName: type
        mapping:
          data: "#/components/schemas/DataAttribute"
          info: "#/components/schemas/InfoAttribute"
          group: "#/components/schemas/GroupAttribute"
          meta: "#/components/schemas/MetadataAttribute"
          custom: "#/components/schemas/CustomAttribute"
      oneOf:
      - $ref: "#/components/schemas/DataAttribute"
      - $ref: "#/components/schemas/InfoAttribute"
      - $ref: "#/components/schemas/GroupAttribute"
      - $ref: "#/components/schemas/MetadataAttribute"
      - $ref: "#/components/schemas/CustomAttribute"
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        content:
          type: object
          description: Content of the Attribute
      required:
      - name
      - type
      - uuid
    CustomAttribute:
      type: object
      description: Custom attribute allows to store and transfer dynamic data. Its
        content can be edited and send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/CustomAttributeProperties"
          description: Properties of the Attributes
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
    CustomAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
    GroupAttribute:
      type: object
      description: Group attribute and its content represents dynamic list of additional
        attributes retrieved by callback. Its content can not be edited and is not
        send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: List of all different types of attributes
          items:
            $ref: "#/components/schemas/BaseAttributeDto"
          oneOf:
          - $ref: "#/components/schemas/DataAttribute"
          - $ref: "#/components/schemas/InfoAttribute"
          - $ref: "#/components/schemas/GroupAttribute"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        attributeCallback:
          $ref: "#/components/schemas/AttributeCallback"
          description: Optional definition of callback for getting the content of
            the Attribute based on the action
      required:
      - name
      - type
      - uuid
    InfoAttribute:
      type: object
      description: Info attribute contains content that is for information purpose
        or represents additional information for object (metadata). Its content can
        not be edited and is not send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/InfoAttributeProperties"
          description: Properties of the Attributes
      required:
      - content
      - contentType
      - name
      - properties
      - type
      - uuid
    InfoAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
      required:
      - label
      - visible
    MetadataAttribute:
      type: object
      description: Info attribute contains content that is for metadata. Its content
        can not be edited and is not send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/MetadataAttributeProperties"
          description: Properties of the Attributes
      required:
      - content
      - contentType
      - name
      - properties
      - type
      - uuid
    MetadataAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        global:
          type: boolean
          default: "false"
          description: Boolean determining if the Metadata is a global metadata.
        overwrite:
          type: boolean
          default: "false"
          description: Boolean determining if the new metadata content should overwrite
            (replace) existing content instead of appending.
      required:
      - label
      - visible
    ClientEndEntityDto:
      type: object
      properties:
        subjectDN:
          type: string
          description: End Entity subject domain name
        email:
          type: string
          description: End Entity email
        extensionData:
          type: array
          description: End Entity extension data
          items:
            $ref: "#/components/schemas/EndEntityExtendedInfoDto"
        subjectAltName:
          type: string
          description: End Entity Subject alternative name
        status:
          type: string
          description: End Entity Subject domain name
          enum:
          - NEW
          - FAILED
          - INITIALIZED
          - IN_PROCESS
          - GENERATED
          - REVOKED
          - HISTORICAL
          - KEY_RECOVERY
          - WAITING_FOR_ADD_APPROVAL
        username:
          type: string
          description: End Entity name
      required:
      - status
      - subjectDN
      - username
