openapi: 3.1.0
info:
  title: CZERTAINLY Attribute API
  description: REST API for managing Custom attributes and global metadata in the
    platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: info@czertainly.com
  license:
    name: MIT License
    url: https://github.com/CZERTAINLY/CZERTAINLY/blob/develop/LICENSE.md
  version: 2.14.1-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:46047
  description: Generated server url
tags:
- name: Custom Attributes
  description: Custom Attributes API
- name: Global Metadata
  description: Global Metadata API
paths:
  /v1/attributes/metadata/{uuid}:
    get:
      tags:
      - Global Metadata
      summary: Global Metadata details
      operationId: getGlobalMetadata
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "200":
          description: Global Metadata details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalMetadataDefinitionDetailDto"
    put:
      tags:
      - Global Metadata
      summary: Edit Global Metadata
      operationId: editGlobalMetadata
      parameters:
      - name: uuid
        in: path
        description: Global Metadata UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalMetadataUpdateRequestDto"
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "200":
          description: Global Metadata updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalMetadataDefinitionDetailDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
    delete:
      tags:
      - Global Metadata
      summary: Delete Global Metadata
      operationId: deleteGlobalMetadata
      parameters:
      - name: uuid
        in: path
        description: Global Metadata UUID
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "204":
          description: Global Metadata deleted
  /v1/attributes/custom/{uuid}:
    get:
      tags:
      - Custom Attributes
      summary: Custom Attribute details
      operationId: getCustomAttribute
      parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "200":
          description: Custom Attribute details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomAttributeDefinitionDetailDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
    put:
      tags:
      - Custom Attributes
      summary: Edit Custom Attribute
      operationId: editCustomAttribute
      parameters:
      - name: uuid
        in: path
        description: Attribute UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomAttributeUpdateRequestDto"
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "200":
          description: Custom Attribute updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomAttributeDefinitionDetailDto"
    delete:
      tags:
      - Custom Attributes
      summary: Delete Custom Attribute
      operationId: deleteCustomAttribute
      parameters:
      - name: uuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "204":
          description: Custom Attribute deleted
  /v1/attributes/metadata:
    get:
      tags:
      - Global Metadata
      summary: List Global Metadata
      operationId: listGlobalMetadata
      responses:
        "200":
          description: list of available Global Metadata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeDefinitionDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
    post:
      tags:
      - Global Metadata
      summary: Create Global Metadata
      operationId: createGlobalMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalMetadataCreateRequestDto"
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "201":
          description: Global Metadata created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UuidDto"
    delete:
      tags:
      - Global Metadata
      summary: Delete multiple Global Metadata
      operationId: bulkDeleteGlobalMetadata
      requestBody:
        description: Global Metadata UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "204":
          description: Global Metadata deleted
  /v1/attributes/metadata/promote:
    get:
      tags:
      - Global Metadata
      summary: Get Available Connector Metadata
      operationId: getConnectorMetadata
      parameters:
      - name: connectorUuid
        in: query
        required: false
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "204":
          description: Connector Metadata retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ConnectorMetadataResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
    post:
      tags:
      - Global Metadata
      summary: Promote Connector Metadata to Global Metadata
      operationId: promoteConnectorMetadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConnectorMetadataPromotionRequestDto"
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "204":
          description: Connector Metadata promoted to global metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalMetadataDefinitionDetailDto"
        "500":
          description: Internal Server Error
  /v1/attributes/custom:
    get:
      tags:
      - Custom Attributes
      summary: List Custom Attributes
      operationId: listCustomAttributes
      parameters:
      - name: attributeContentType
        in: query
        required: false
        schema:
          $ref: "#/components/schemas/AttributeContentType"
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "200":
          description: list of available Custom Attributes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomAttributeDefinitionDto"
    post:
      tags:
      - Custom Attributes
      summary: Create Custom Attribute
      operationId: createCustomAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomAttributeCreateRequestDto"
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "201":
          description: Custom Attribute created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UuidDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
    delete:
      tags:
      - Custom Attributes
      summary: Delete multiple Custom Attributes
      operationId: bulkDeleteCustomAttributes
      requestBody:
        description: Attribute UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "204":
          description: Custom Attributes deleted
  /v1/attributes/custom/{uuid}/resources:
    patch:
      tags:
      - Custom Attributes
      summary: Associate Custom Attribute to Resource
      operationId: updateResources
      parameters:
      - name: uuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      requestBody:
        description: List of Resources
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - raProfiles
            - authorities
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "204":
          description: Custom Attribute associated to the resources
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
  /v1/attributes/custom/{uuid}/enable:
    patch:
      tags:
      - Custom Attributes
      summary: Enable Custom Attribute
      operationId: enableCustomAttribute
      parameters:
      - name: uuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "204":
          description: Custom Attribute enabled
        "500":
          description: Internal Server Error
  /v1/attributes/custom/{uuid}/disable:
    patch:
      tags:
      - Custom Attributes
      summary: Disable Custom Attribute
      operationId: disableCustomAttribute
      parameters:
      - name: uuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "204":
          description: Custom Attribute disabled
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
  /v1/attributes/custom/resources/{resourceName}/objects/{objectUuid}/{attributeUuid}:
    delete:
      tags:
      - Custom Attributes
      summary: Delete Value of a Custom Attribute for a Resource
      operationId: deleteAttributeContentForResource
      parameters:
      - name: resourceName
        in: path
        description: Resource Type
        required: true
        schema:
          $ref: "#/components/schemas/Resource"
      - name: objectUuid
        in: path
        description: Object UUID
        required: true
        schema:
          type: string
      - name: attributeUuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "200":
          description: Custom Attribute value deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseAttributeDto"
    patch:
      tags:
      - Custom Attributes
      summary: Update Value of a Custom Attribute for a Resource
      operationId: updateAttributeContentForResource
      parameters:
      - name: resourceName
        in: path
        description: Resource Type
        required: true
        schema:
          $ref: "#/components/schemas/Resource"
      - name: objectUuid
        in: path
        description: Object UUID
        required: true
        schema:
          type: string
      - name: attributeUuid
        in: path
        description: Custom Attribute UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/BaseAttributeContentDto"
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "200":
          description: Custom Attribute value updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResponseAttributeDto"
  /v1/attributes/custom/enable:
    patch:
      tags:
      - Custom Attributes
      summary: Enable multiple Custom Attributes
      operationId: bulkEnableCustomAttributes
      requestBody:
        description: Attribute UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "204":
          description: Custom Attributes enabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
  /v1/attributes/custom/disable:
    patch:
      tags:
      - Custom Attributes
      summary: Disable multiple Custom Attributes
      operationId: bulkDisableCustomAttributes
      requestBody:
        description: Attribute UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "204":
          description: Custom Attributes disabled
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
  /v1/attributes/custom/resources:
    get:
      tags:
      - Custom Attributes
      summary: Get available resources for Custom Attributes
      operationId: getResources
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "200":
          description: Custom Attribute retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Resource"
  /v1/attributes/custom/resources/{resource}:
    get:
      tags:
      - Custom Attributes
      summary: Get Custom Attributes for a resource
      operationId: getResourceCustomAttributes
      parameters:
      - name: resource
        in: path
        description: Resource Name
        required: true
        schema:
          $ref: "#/components/schemas/Resource"
      responses:
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "500":
          description: Internal Server Error
        "200":
          description: Custom Attribute retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomAttribute"
components:
  schemas:
    GlobalMetadataUpdateRequestDto:
      type: object
      properties:
        description:
          type: string
          description: Attribute description
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
      required:
      - label
    AuthenticationServiceExceptionDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          description: Status code of the HTTP Request
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
      required:
      - code
      - message
      - statusCode
    ErrorMessageDto:
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
      required:
      - message
    AttributeContentType:
      type: string
      enum:
      - string
      - text
      - integer
      - boolean
      - float
      - date
      - time
      - datetime
      - secret
      - file
      - credential
      - codeblock
      - object
    AttributeType:
      type: string
      enum:
      - data
      - group
      - info
      - meta
      - custom
    GlobalMetadataDefinitionDetailDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Attribute Content Type
        description:
          type: string
          description: Attribute description
        enabled:
          type: boolean
          description: Boolean determining if the Attribute is enabled. Required only
            for Custom Attribute
        type:
          $ref: "#/components/schemas/AttributeType"
          default: custom
          description: Type of the Attribute
          example: custom
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
      required:
      - contentType
      - description
      - label
      - name
      - type
      - uuid
    AttributeCallback:
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          type: array
          description: Mappings for the callback method
          items:
            $ref: "#/components/schemas/AttributeCallbackMapping"
          uniqueItems: true
      required:
      - callbackContext
      - callbackMethod
      - mappings
    AttributeCallbackMapping:
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
        attributeContentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: 'Type of the attribute content. '
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: "#/components/schemas/AttributeValueTarget"
          uniqueItems: true
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      required:
      - targets
      - to
    AttributeConstraintType:
      type: string
      enum:
      - regExp
      - range
      - dateTime
    AttributeValueTarget:
      type: string
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraint:
      type: object
      description: Optional regular expressions and constraints used for validating
        the Attribute content
      oneOf:
      - $ref: "#/components/schemas/RegexpAttributeConstraint"
      - $ref: "#/components/schemas/RangeAttributeConstraint"
      - $ref: "#/components/schemas/DateTimeAttributeConstraint"
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: object
          description: Attribute Constraint Data
      required:
      - data
      - type
    BaseAttributeContentDto:
      type: object
      description: Base Attribute content definition
      oneOf:
      - $ref: "#/components/schemas/BooleanAttributeContent"
      - $ref: "#/components/schemas/CodeBlockAttributeContent"
      - $ref: "#/components/schemas/CredentialAttributeContent"
      - $ref: "#/components/schemas/DateAttributeContent"
      - $ref: "#/components/schemas/DateTimeAttributeContent"
      - $ref: "#/components/schemas/FileAttributeContent"
      - $ref: "#/components/schemas/FloatAttributeContent"
      - $ref: "#/components/schemas/IntegerAttributeContent"
      - $ref: "#/components/schemas/ObjectAttributeContent"
      - $ref: "#/components/schemas/SecretAttributeContent"
      - $ref: "#/components/schemas/StringAttributeContent"
      - $ref: "#/components/schemas/TextAttributeContent"
      - $ref: "#/components/schemas/TimeAttributeContent"
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      required:
      - data
    BooleanAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
      required:
      - data
    CodeBlockAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CodeBlockAttributeContentData"
          description: CodeBlock attribute content data
      required:
      - data
    CodeBlockAttributeContentData:
      type: object
      properties:
        language:
          $ref: "#/components/schemas/ProgrammingLanguageEnum"
          description: Definition of programming languages used for code
          example: "JAVA, PHP, C, etc"
        code:
          type: string
          description: Block of the code in Base64. Formatting of the code is specified
            by variable language
      required:
      - code
      - language
    CredentialAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CredentialAttributeContentData"
          description: Credential attribute content data
      required:
      - data
    CredentialAttributeContentData:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: "#/components/schemas/DataAttribute"
      required:
      - attributes
      - kind
      - name
      - uuid
    CustomAttributeUpdateRequestDto:
      type: object
      properties:
        description:
          type: string
          description: Attribute description
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
        content:
          type: array
          description: Predefined content for the attribute if needed. The content
            of the Attribute must satisfy the type
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
        resources:
          type: array
          description: List of resource to be associated with the custom attribute
          items:
            $ref: "#/components/schemas/Resource"
      required:
      - label
    DataAttribute:
      type: object
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          description: Content of the Attribute
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/DataAttributeProperties"
          description: Properties of the Attributes
        constraints:
          type: array
          description: Optional regular expressions and constraints used for validating
            the Attribute content
          items:
            $ref: "#/components/schemas/BaseAttributeConstraint"
          oneOf:
          - $ref: "#/components/schemas/RegexpAttributeConstraint"
          - $ref: "#/components/schemas/RangeAttributeConstraint"
          - $ref: "#/components/schemas/DateTimeAttributeConstraint"
        attributeCallback:
          $ref: "#/components/schemas/AttributeCallback"
          description: Optional definition of callback for getting the content of
            the Attribute based on the action
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
    DataAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
    DateAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date
          description: Date attribute value in format yyyy-MM-dd
      required:
      - data
    DateTimeAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/DateTimeAttributeConstraintData"
          description: DateTime Range Attribute Constraint Data
      required:
      - type
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          format: date-time
          description: Start of the datetime for validation
        to:
          type: string
          format: date-time
          description: End of the datetime for validation
    DateTimeAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date-time
          description: DateTime attribute value in format yyyy-MM-ddTHH:mm:ss.SSSXXX
      required:
      - data
    FileAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/FileAttributeContentData"
          description: File attribute content data
      required:
      - data
    FileAttributeContentData:
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          type: string
          description: Type of the file uploaded
      required:
      - content
      - fileName
      - mimeType
    FloatAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          format: float
          description: Float attribute value
      required:
      - data
    IntegerAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          format: int32
          description: Integer attribute value
      required:
      - data
    ObjectAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
      required:
      - data
    ProgrammingLanguageEnum:
      type: string
      enum:
      - apacheconf
      - bash
      - basic
      - c
      - csharp
      - cpp
      - css
      - docker
      - fsharp
      - gherkin
      - git
      - go
      - graphql
      - html
      - http
      - ini
      - java
      - javascript
      - json
      - kotlin
      - latex
      - lisp
      - makefile
      - markdown
      - matlab
      - nginx
      - objectivec
      - perl
      - php
      - powershell
      - properties
      - python
      - ruby
      - rust
      - smalltalk
      - sql
      - typescript
      - vbnet
      - xquery
      - xml
      - yaml
    RangeAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/RangeAttributeConstraintData"
          description: Integer Range Attribute Constraint Data
      required:
      - type
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          format: int32
          description: Start of the range for validation
        to:
          type: integer
          format: int32
          description: End of the range for validation
    RegexpAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
      required:
      - type
    Resource:
      type: string
      enum:
      - NONE
      - dashboard
      - settings
      - auditLogs
      - credentials
      - connectors
      - attributes
      - jobs
      - notificationInstances
      - users
      - roles
      - acmeAccounts
      - acmeProfiles
      - scepProfiles
      - cmpProfiles
      - authorities
      - raProfiles
      - certificates
      - certificateRequests
      - groups
      - complianceProfiles
      - discoveries
      - entities
      - locations
      - tokenProfiles
      - tokens
      - keys
      - approvalProfiles
      - approvals
      - rules
      - actions
      - triggers
      - resources
      - resourceEvents
      - searchFilters
      - keyItems
      - platformEnums
      - notifications
      - conditions
      - executions
      - complianceRules
      - complianceGroups
      - customAttributes
      - globalMetadata
      - acmeOrders
      - acmeAuthorizations
      - acmeChallenges
      - cmpTransactions
      - endEntityProfiles
      - authenticationProviders
    SecretAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/SecretAttributeContentData"
          description: Secret attribute content data
      required:
      - data
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
    StringAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
      required:
      - data
    TextAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
      required:
      - data
    TimeAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Time attribute value in format HH:mm:ss
      required:
      - data
    CustomAttributeDefinitionDetailDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Attribute Content Type
        description:
          type: string
          description: Attribute description
        enabled:
          type: boolean
          description: Boolean determining if the Attribute is enabled. Required only
            for Custom Attribute
        type:
          $ref: "#/components/schemas/AttributeType"
          default: custom
          description: Type of the Attribute
          example: custom
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
        content:
          type: array
          description: Predefined content for the attribute if needed. The content
            of the Attribute must satisfy the type
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
        resources:
          type: array
          description: List of resources which are allowed to use the Custom Attribute
          items:
            $ref: "#/components/schemas/Resource"
      required:
      - contentType
      - description
      - label
      - name
      - required
      - type
      - uuid
    GlobalMetadataCreateRequestDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Attribute Content Type
        description:
          type: string
          description: Attribute description
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
      required:
      - contentType
      - label
      - name
    UuidDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
      required:
      - uuid
    ConnectorMetadataPromotionRequestDto:
      type: object
      properties:
        uuid:
          type: string
          description: Metadata UUID
        connectorUuid:
          type: string
          description: Connector UUID
      required:
      - connectorUuid
      - uuid
    CustomAttributeCreateRequestDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Attribute Content Type
        description:
          type: string
          description: Attribute description
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
        content:
          type: array
          description: Predefined content for the attribute if needed. The content
            of the Attribute must satisfy the type
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
        resources:
          type: array
          description: List of resource to be associated with the custom attribute
          items:
            $ref: "#/components/schemas/Resource"
      required:
      - contentType
      - label
      - name
    ResponseAttributeDto:
      type: object
      description: Response attribute with content for object it belongs to
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
      required:
      - contentType
      - label
      - name
      - type
    AttributeDefinitionDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Attribute Content Type
        description:
          type: string
          description: Attribute description
        enabled:
          type: boolean
          description: Boolean determining if the Attribute is enabled. Required only
            for Custom Attribute
      required:
      - contentType
      - description
      - name
      - uuid
    ConnectorMetadataResponseDto:
      type: object
      properties:
        name:
          type: string
          description: Metadata Name
        uuid:
          type: string
          description: Metadata UUID
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Metadata
        label:
          type: string
          description: Metadata Label
        connectorUuid:
          type: string
          description: Connector UUID
      required:
      - connectorUuid
      - contentType
      - label
      - name
      - uuid
    CustomAttributeDefinitionDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
        name:
          type: string
          description: Name of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Attribute Content Type
        description:
          type: string
          description: Attribute description
        enabled:
          type: boolean
          description: Boolean determining if the Attribute is enabled. Required only
            for Custom Attribute
        resources:
          type: array
          description: List of resources for custom attribute
          items:
            $ref: "#/components/schemas/Resource"
      required:
      - contentType
      - description
      - name
      - resources
      - uuid
    CustomAttribute:
      type: object
      description: Custom attribute allows to store and transfer dynamic data. Its
        content can be edited and send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/CustomAttributeProperties"
          description: Properties of the Attributes
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
    CustomAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
