openapi: 3.1.0
info:
  title: CZERTAINLY Cert Manager
  description: REST API for implementations of cert-manager issuer
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: info@czertainly.com
  license:
    name: MIT License
    url: https://github.com/CZERTAINLY/CZERTAINLY/blob/develop/LICENSE.md
  version: 2.14.1-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:33187
  description: Generated server url
tags:
- name: Certificate Inventory
  description: Certificate Inventory API
- name: Authentication Management
  description: Authentication Management API
- name: RA Profile Management
  description: RA Profile Management API
- name: Client Operations v2
  description: Client Operations v2 API
paths:
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/certificates:
    post:
      tags:
      - Client Operations v2
      summary: Issue Certificate
      operationId: issueCertificate
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientCertificateSignRequestDto"
        required: true
      responses:
        "500":
          description: Internal Server Error
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Certificate issued
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCertificateDataResponseDto"
        "401":
          description: Unauthorized
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v1/raProfiles/{raProfileUuid}:
    get:
      tags:
      - RA Profile Management
      summary: Details of RA Profile
      operationId: getRaProfileWithoutAuthority
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "200":
          description: RA Profile details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RaProfileDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v1/certificates/{uuid}:
    get:
      tags:
      - Certificate Inventory
      summary: Get Certificate Details
      operationId: getCertificate
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Certificate detail retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateDetailDto"
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
  /v1/auth/profile:
    get:
      tags:
      - Authentication Management
      summary: Profile Authorization
      operationId: profile
      responses:
        "200":
          description: Authenticate a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailDto"
        "500":
          description: Internal Server Error
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
components:
  schemas:
    AttributeCallback:
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          type: array
          description: Mappings for the callback method
          items:
            $ref: "#/components/schemas/AttributeCallbackMapping"
          uniqueItems: true
      required:
      - callbackContext
      - callbackMethod
      - mappings
    AttributeCallbackMapping:
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
        attributeContentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: 'Type of the attribute content. '
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: "#/components/schemas/AttributeValueTarget"
          uniqueItems: true
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      required:
      - targets
      - to
    AttributeConstraintType:
      type: string
      enum:
      - regExp
      - range
      - dateTime
    AttributeContentType:
      type: string
      enum:
      - string
      - text
      - integer
      - boolean
      - float
      - date
      - time
      - datetime
      - secret
      - file
      - credential
      - codeblock
      - object
    AttributeType:
      type: string
      enum:
      - data
      - group
      - info
      - meta
      - custom
    AttributeValueTarget:
      type: string
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraint:
      type: object
      description: Optional regular expressions and constraints used for validating
        the Attribute content
      oneOf:
      - $ref: "#/components/schemas/RegexpAttributeConstraint"
      - $ref: "#/components/schemas/RangeAttributeConstraint"
      - $ref: "#/components/schemas/DateTimeAttributeConstraint"
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: object
          description: Attribute Constraint Data
      required:
      - data
      - type
    BaseAttributeContentDto:
      type: object
      description: Base Attribute content definition
      oneOf:
      - $ref: "#/components/schemas/BooleanAttributeContent"
      - $ref: "#/components/schemas/CodeBlockAttributeContent"
      - $ref: "#/components/schemas/CredentialAttributeContent"
      - $ref: "#/components/schemas/DateAttributeContent"
      - $ref: "#/components/schemas/DateTimeAttributeContent"
      - $ref: "#/components/schemas/FileAttributeContent"
      - $ref: "#/components/schemas/FloatAttributeContent"
      - $ref: "#/components/schemas/IntegerAttributeContent"
      - $ref: "#/components/schemas/ObjectAttributeContent"
      - $ref: "#/components/schemas/SecretAttributeContent"
      - $ref: "#/components/schemas/StringAttributeContent"
      - $ref: "#/components/schemas/TextAttributeContent"
      - $ref: "#/components/schemas/TimeAttributeContent"
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      required:
      - data
    BooleanAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
      required:
      - data
    CertificateRequestFormat:
      type: string
      enum:
      - pkcs10
      - crmf
    ClientCertificateSignRequestDto:
      type: object
      properties:
        csrAttributes:
          type: array
          description: List of attributes to create CSR. Required if CSR is not provided
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        signatureAttributes:
          type: array
          description: List of attributes to sign the CSR
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        request:
          type: string
          description: Certificate signing request encoded as Base64 string
        format:
          $ref: "#/components/schemas/CertificateRequestFormat"
          default: pkcs10
          description: Certificate signing request format
        tokenProfileUuid:
          type: string
          format: uuid
          description: Token Profile UUID. Required if CSR is not uploaded
        keyUuid:
          type: string
          format: uuid
          description: Key UUID. Required if CSR is not uploaded
        attributes:
          type: array
          description: List of RA Profile related Attributes to issue Certificate
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
      required:
      - attributes
      - request
    CodeBlockAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CodeBlockAttributeContentData"
          description: CodeBlock attribute content data
      required:
      - data
    CodeBlockAttributeContentData:
      type: object
      properties:
        language:
          $ref: "#/components/schemas/ProgrammingLanguageEnum"
          description: Definition of programming languages used for code
          example: "JAVA, PHP, C, etc"
        code:
          type: string
          description: Block of the code in Base64. Formatting of the code is specified
            by variable language
      required:
      - code
      - language
    CredentialAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CredentialAttributeContentData"
          description: Credential attribute content data
      required:
      - data
    CredentialAttributeContentData:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: "#/components/schemas/DataAttribute"
      required:
      - attributes
      - kind
      - name
      - uuid
    DataAttribute:
      type: object
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/DataAttributeProperties"
          description: Properties of the Attributes
        constraints:
          type: array
          description: Optional regular expressions and constraints used for validating
            the Attribute content
          items:
            $ref: "#/components/schemas/BaseAttributeConstraint"
          oneOf:
          - $ref: "#/components/schemas/RegexpAttributeConstraint"
          - $ref: "#/components/schemas/RangeAttributeConstraint"
          - $ref: "#/components/schemas/DateTimeAttributeConstraint"
        attributeCallback:
          $ref: "#/components/schemas/AttributeCallback"
          description: Optional definition of callback for getting the content of
            the Attribute based on the action
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
    DataAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
    DateAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date
          description: Date attribute value in format yyyy-MM-dd
      required:
      - data
    DateTimeAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/DateTimeAttributeConstraintData"
          description: DateTime Range Attribute Constraint Data
      required:
      - type
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          format: date-time
          description: Start of the datetime for validation
        to:
          type: string
          format: date-time
          description: End of the datetime for validation
    DateTimeAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date-time
          description: DateTime attribute value in format yyyy-MM-ddTHH:mm:ss.SSSXXX
      required:
      - data
    FileAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/FileAttributeContentData"
          description: File attribute content data
      required:
      - data
    FileAttributeContentData:
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          type: string
          description: Type of the file uploaded
      required:
      - content
      - fileName
      - mimeType
    FloatAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          format: float
          description: Float attribute value
      required:
      - data
    IntegerAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          format: int32
          description: Integer attribute value
      required:
      - data
    ObjectAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
      required:
      - data
    ProgrammingLanguageEnum:
      type: string
      enum:
      - apacheconf
      - bash
      - basic
      - c
      - csharp
      - cpp
      - css
      - docker
      - fsharp
      - gherkin
      - git
      - go
      - graphql
      - html
      - http
      - ini
      - java
      - javascript
      - json
      - kotlin
      - latex
      - lisp
      - makefile
      - markdown
      - matlab
      - nginx
      - objectivec
      - perl
      - php
      - powershell
      - properties
      - python
      - ruby
      - rust
      - smalltalk
      - sql
      - typescript
      - vbnet
      - xquery
      - xml
      - yaml
    RangeAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/RangeAttributeConstraintData"
          description: Integer Range Attribute Constraint Data
      required:
      - type
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          format: int32
          description: Start of the range for validation
        to:
          type: integer
          format: int32
          description: End of the range for validation
    RegexpAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
      required:
      - type
    RequestAttributeDto:
      type: object
      description: Request attribute to send attribute content for object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
      required:
      - content
      - contentType
      - name
      - uuid
    SecretAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/SecretAttributeContentData"
          description: Secret attribute content data
      required:
      - data
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
    StringAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
      required:
      - data
    TextAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
      required:
      - data
    TimeAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Time attribute value in format HH:mm:ss
      required:
      - data
    AuthenticationServiceExceptionDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          description: Status code of the HTTP Request
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
      required:
      - code
      - message
      - statusCode
    ErrorMessageDto:
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
      required:
      - message
    ClientCertificateDataResponseDto:
      type: object
      properties:
        certificateData:
          type: string
          description: Base64 encoded Certificate content
        uuid:
          type: string
          description: UUID of Certificate
      required:
      - uuid
    RaProfileDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of RA Profile
        authorityInstanceUuid:
          type: string
          description: UUID of Authority provider
        authorityInstanceName:
          type: string
          description: Name of Authority instance
        legacyAuthority:
          type: boolean
          description: Has Authority of legacy authority provider
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        attributes:
          type: array
          description: List of RA Profiles attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        enabledProtocols:
          type: array
          description: List of protocols enabled
          items:
            type: string
      required:
      - authorityInstanceName
      - authorityInstanceUuid
      - enabled
      - name
      - uuid
    ResponseAttributeDto:
      type: object
      description: Response attribute with content for object it belongs to
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
      required:
      - contentType
      - label
      - name
      - type
    CertificateComplianceResultDto:
      type: object
      properties:
        connectorName:
          type: string
          description: Name of the Compliance Provider
          example: Provider1
        ruleName:
          type: string
          description: Name of the rule
          example: RuleName
        ruleDescription:
          type: string
          description: Description of the rule
          example: Description sample
        status:
          $ref: "#/components/schemas/ComplianceRuleStatus"
          description: Status of the rule
          example: nok
        attributes:
          type: array
          description: Attributes of the rule
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
      required:
      - connectorName
      - ruleDescription
      - ruleName
      - status
    CertificateDetailDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Certificate
        commonName:
          type: string
          description: Certificate common name
        serialNumber:
          type: string
          description: Certificate serial number
        issuerCommonName:
          type: string
          description: Certificate issuer common name
        issuerDn:
          type: string
          description: Issuer DN of the Certificate
        subjectDn:
          type: string
          description: Subject DN of the Certificate
        notBefore:
          type: string
          format: date-time
          description: Certificate validity start date
        notAfter:
          type: string
          format: date-time
          description: Certificate expiration date
        publicKeyAlgorithm:
          type: string
          description: Public key algorithm
        signatureAlgorithm:
          type: string
          description: Certificate signature algorithm
        keySize:
          type: integer
          format: int32
          description: Certificate key size
        state:
          $ref: "#/components/schemas/CertificateState"
          description: State of the Certificate
        validationStatus:
          $ref: "#/components/schemas/CertificateValidationStatus"
          description: Current validation status of the certificate
        raProfile:
          $ref: "#/components/schemas/SimplifiedRaProfileDto"
          description: RA Profile associated to the Certificate
        fingerprint:
          type: string
          description: SHA256 fingerprint of the Certificate
        groups:
          type: array
          description: Groups associated to the Certificate
          items:
            $ref: "#/components/schemas/GroupDto"
        owner:
          type: string
          description: Certificate Owner
        ownerUuid:
          type: string
          description: Certificate Owner UUID
        certificateType:
          $ref: "#/components/schemas/CertificateType"
          description: Certificate type
        issuerSerialNumber:
          type: string
          description: Serial number of the issuer
        complianceStatus:
          $ref: "#/components/schemas/ComplianceStatus"
          description: Certificate compliance status
        issuerCertificateUuid:
          type: string
          description: UUID of the issuer certificate
        privateKeyAvailability:
          type: boolean
          description: Private Key Availability
        trustedCa:
          type: boolean
          description: "Indicator whether CA is marked as trusted, set to null if\
            \ certificate is not CA"
        extendedKeyUsage:
          type: array
          description: Extended key usages
          items:
            type: string
        keyUsage:
          type: array
          description: Key usages
          items:
            type: string
        subjectType:
          $ref: "#/components/schemas/CertificateSubjectType"
          description: Certificate subject type
        metadata:
          type: array
          description: Certificate metadata
          items:
            $ref: "#/components/schemas/MetadataResponseDto"
        certificateContent:
          type: string
          description: Base64 encoded Certificate content
        subjectAlternativeNames:
          type: object
          additionalProperties:
            type: object
          description: Subject alternative names
        locations:
          type: array
          description: Locations associated to the Certificate
          items:
            $ref: "#/components/schemas/LocationDto"
          uniqueItems: true
        nonCompliantRules:
          type: array
          description: Certificate compliance check result
          items:
            $ref: "#/components/schemas/CertificateComplianceResultDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        key:
          $ref: "#/components/schemas/KeyDto"
          description: Key Pair of the certificate
        certificateRequest:
          $ref: "#/components/schemas/CertificateRequestDto"
          description: Certificate request data
        sourceCertificateUuid:
          type: string
          format: uuid
          description: Source certificate UUID
        issueAttributes:
          type: array
          description: List of issue attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        revokeAttributes:
          type: array
          description: List of revoke attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        relatedCertificates:
          type: array
          description: List of related certificates
          items:
            $ref: "#/components/schemas/CertificateDto"
        protocolInfo:
          $ref: "#/components/schemas/CertificateProtocolDto"
          description: Information about protocol used to issue the certificate
      required:
      - certificateContent
      - commonName
      - keySize
      - keyUsage
      - privateKeyAvailability
      - publicKeyAlgorithm
      - signatureAlgorithm
      - state
      - subjectDn
      - subjectType
      - trustedCa
      - uuid
      - validationStatus
    CertificateDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Certificate
        commonName:
          type: string
          description: Certificate common name
        serialNumber:
          type: string
          description: Certificate serial number
        issuerCommonName:
          type: string
          description: Certificate issuer common name
        issuerDn:
          type: string
          description: Issuer DN of the Certificate
        subjectDn:
          type: string
          description: Subject DN of the Certificate
        notBefore:
          type: string
          format: date-time
          description: Certificate validity start date
        notAfter:
          type: string
          format: date-time
          description: Certificate expiration date
        publicKeyAlgorithm:
          type: string
          description: Public key algorithm
        signatureAlgorithm:
          type: string
          description: Certificate signature algorithm
        keySize:
          type: integer
          format: int32
          description: Certificate key size
        state:
          $ref: "#/components/schemas/CertificateState"
          description: State of the Certificate
        validationStatus:
          $ref: "#/components/schemas/CertificateValidationStatus"
          description: Current validation status of the certificate
        raProfile:
          $ref: "#/components/schemas/SimplifiedRaProfileDto"
          description: RA Profile associated to the Certificate
        fingerprint:
          type: string
          description: SHA256 fingerprint of the Certificate
        groups:
          type: array
          description: Groups associated to the Certificate
          items:
            $ref: "#/components/schemas/GroupDto"
        owner:
          type: string
          description: Certificate Owner
        ownerUuid:
          type: string
          description: Certificate Owner UUID
        certificateType:
          $ref: "#/components/schemas/CertificateType"
          description: Certificate type
        issuerSerialNumber:
          type: string
          description: Serial number of the issuer
        complianceStatus:
          $ref: "#/components/schemas/ComplianceStatus"
          description: Certificate compliance status
        issuerCertificateUuid:
          type: string
          description: UUID of the issuer certificate
        privateKeyAvailability:
          type: boolean
          description: Private Key Availability
        trustedCa:
          type: boolean
          description: "Indicator whether CA is marked as trusted, set to null if\
            \ certificate is not CA"
      required:
      - commonName
      - keySize
      - privateKeyAvailability
      - publicKeyAlgorithm
      - signatureAlgorithm
      - state
      - subjectDn
      - trustedCa
      - uuid
      - validationStatus
    CertificateInLocationDto:
      type: object
      properties:
        certificateUuid:
          type: string
          description: UUID of the Certificate
        state:
          $ref: "#/components/schemas/CertificateState"
          description: State of the Certificate
        validationStatus:
          $ref: "#/components/schemas/CertificateValidationStatus"
          description: Current validation status of the certificate
        commonName:
          type: string
          description: Common Name of the Subject DN field of the Certificate
        serialNumber:
          type: string
          description: Serial number in HEX of the Certificate
        metadata:
          type: array
          description: Metadata of the Certificate in Location
          items:
            $ref: "#/components/schemas/MetadataResponseDto"
        pushAttributes:
          type: array
          description: Applied push attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        csrAttributes:
          type: array
          description: Applied issue attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        withKey:
          type: boolean
          default: "false"
          description: If the Certificate in Location has associated private key
      required:
      - certificateUuid
      - commonName
      - serialNumber
      - state
      - validationStatus
    CertificateProtocol:
      type: string
      enum:
      - acme
      - scep
      - cmp
    CertificateProtocolDto:
      type: object
      properties:
        protocol:
          $ref: "#/components/schemas/CertificateProtocol"
          description: Protocol used to issue certificate
        protocolProfileUuid:
          type: string
          format: uuid
          description: UUID of the protocol
        additionalProtocolUuid:
          type: string
          format: uuid
          description: "Additional UUID for use of the protocol, for example ACME\
            \ Account UUID in case of ACME protocol"
      required:
      - protocol
      - protocolProfileUuid
    CertificateRequestDto:
      type: object
      properties:
        certificateType:
          $ref: "#/components/schemas/CertificateType"
          description: Certificate type
        certificateRequestFormat:
          $ref: "#/components/schemas/CertificateRequestFormat"
          description: Certificate request format
        publicKeyAlgorithm:
          type: string
          description: Public key algorithm
        signatureAlgorithm:
          type: string
          description: Certificate signature algorithm
        content:
          type: string
          description: Certificate request content
        commonName:
          type: string
          description: Certificate common name
        subjectDn:
          type: string
          description: Subject DN of the Certificate
        subjectAlternativeNames:
          type: object
          additionalProperties:
            type: object
          description: Subject alternative names
        attributes:
          type: array
          description: CSR Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        signatureAttributes:
          type: array
          description: Signature Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        keyUuid:
          type: string
          description: UUID of the Key
      required:
      - commonName
      - content
      - publicKeyAlgorithm
      - signatureAlgorithm
      - subjectDn
    CertificateState:
      type: string
      enum:
      - requested
      - rejected
      - pending_approval
      - pending_issue
      - pending_revoke
      - failed
      - issued
      - revoked
      - archived
    CertificateSubjectType:
      type: string
      enum:
      - endEntity
      - selfSignedEndEntity
      - intermediateCa
      - rootCa
    CertificateType:
      type: string
      enum:
      - X.509
      - SSH
    CertificateValidationStatus:
      type: string
      enum:
      - not_checked
      - failed
      - inactive
      - invalid
      - valid
      - revoked
      - expiring
      - expired
    ComplianceRuleStatus:
      type: string
      enum:
      - ok
      - nok
      - na
    ComplianceStatus:
      type: string
      enum:
      - not_checked
      - ok
      - nok
      - na
    GroupDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Group
        email:
          type: string
          description: Group contact email
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
      required:
      - name
      - uuid
    KeyAlgorithm:
      type: string
      enum:
      - RSA
      - ECDSA
      - FALCON
      - CRYSTALS-Dilithium
      - SPHINCS+
      - Unknown
    KeyDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Key
        creationTime:
          type: string
          format: date-time
          description: "Creation time of the Key. If the key is discovered from the\
            \ connector, then it will be returned"
        tokenProfileUuid:
          type: string
          description: UUID of the Token Profile
        tokenProfileName:
          type: string
          description: Name of the Token Profile
        tokenInstanceUuid:
          type: string
          description: Token Instance UUID
        tokenInstanceName:
          type: string
          description: Token Instance Name
        owner:
          type: string
          description: Owner of the Key
        ownerUuid:
          type: string
          description: UUID of the owner of the Key
        groups:
          type: array
          description: Groups associated to the key
          items:
            $ref: "#/components/schemas/GroupDto"
        items:
          type: array
          description: Key Items
          items:
            $ref: "#/components/schemas/KeyItemDto"
        associations:
          type: integer
          format: int32
          description: Number of associated objects
      required:
      - creationTime
      - description
      - items
      - name
      - tokenInstanceName
      - tokenInstanceUuid
      - uuid
    KeyFormat:
      type: string
      enum:
      - Raw
      - SubjectPublicKeyInfo
      - PrivateKeyInfo
      - EncryptedPrivateKeyInfo
      - Custom
    KeyItemDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Key
        creationTime:
          type: string
          format: date-time
          description: "Creation time of the Key. If the key is discovered from the\
            \ connector, then it will be returned"
        keyWrapperUuid:
          type: string
          description: UUID of the wrapper object
        tokenProfileUuid:
          type: string
          description: UUID of the Token Profile
        tokenProfileName:
          type: string
          description: Name of the Token Profile
        tokenInstanceUuid:
          type: string
          description: Token Instance UUID
        tokenInstanceName:
          type: string
          description: Token Instance Name
        owner:
          type: string
          description: Owner of the Key
        ownerUuid:
          type: string
          description: UUID of the owner of the Key
        groups:
          type: array
          description: Groups associated to the Key
          items:
            $ref: "#/components/schemas/GroupDto"
        associations:
          type: integer
          format: int32
          description: Number of associated objects
        keyReferenceUuid:
          type: string
          description: UUID of the key item in the Connector
        type:
          $ref: "#/components/schemas/KeyType"
          description: Type of the Key
        keyAlgorithm:
          $ref: "#/components/schemas/KeyAlgorithm"
          description: Key Algorithm
        format:
          $ref: "#/components/schemas/KeyFormat"
          description: Key Format
        length:
          type: integer
          format: int32
          description: Key Length
        usage:
          type: array
          description: Key Usages
          items:
            $ref: "#/components/schemas/KeyUsage"
        enabled:
          type: boolean
          description: Boolean describing if the key is enabled or not
        state:
          $ref: "#/components/schemas/KeyState"
          description: Key State
      required:
      - creationTime
      - description
      - enabled
      - keyAlgorithm
      - keyReferenceUuid
      - keyWrapperUuid
      - name
      - state
      - tokenInstanceName
      - tokenInstanceUuid
      - type
      - usage
      - uuid
    KeyState:
      type: string
      enum:
      - pre-active
      - active
      - deactivated
      - compromised
      - destroyed
      - destroyedCompromised
    KeyType:
      type: string
      enum:
      - Secret
      - Public
      - Private
      - Split
    KeyUsage:
      type: string
      enum:
      - sign
      - verify
      - encrypt
      - decrypt
      - wrap
      - unwrap
    LocationDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Location
        entityInstanceUuid:
          type: string
          description: UUID of Entity instance
        entityInstanceName:
          type: string
          description: Name of Entity instance
        attributes:
          type: array
          description: List of Location attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        supportMultipleEntries:
          type: boolean
          default: "false"
          description: If the location supports multiple Certificates
        supportKeyManagement:
          type: boolean
          default: "false"
          description: If the location supports key management operations
        certificates:
          type: array
          description: List of Certificates in Location
          items:
            $ref: "#/components/schemas/CertificateInLocationDto"
        metadata:
          type: array
          description: Location metadata
          items:
            $ref: "#/components/schemas/MetadataResponseDto"
      required:
      - attributes
      - certificates
      - enabled
      - entityInstanceName
      - entityInstanceUuid
      - name
      - supportKeyManagement
      - supportMultipleEntries
      - uuid
    MetadataResponseDto:
      type: object
      description: Metadata response attributes with their source connector
      properties:
        connectorUuid:
          type: string
          description: UUID of the Connector
        connectorName:
          type: string
          description: Name of the Connector
        sourceObjectType:
          $ref: "#/components/schemas/Resource"
          description: Source Object Type
        items:
          type: array
          description: List of Metadata
          items:
            $ref: "#/components/schemas/ResponseMetadataDto"
      required:
      - items
    NameAndUuidDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
      required:
      - name
      - uuid
    Resource:
      type: string
      enum:
      - NONE
      - dashboard
      - settings
      - auditLogs
      - credentials
      - connectors
      - attributes
      - jobs
      - notificationInstances
      - users
      - roles
      - acmeAccounts
      - acmeProfiles
      - scepProfiles
      - cmpProfiles
      - authorities
      - raProfiles
      - certificates
      - certificateRequests
      - groups
      - complianceProfiles
      - discoveries
      - entities
      - locations
      - tokenProfiles
      - tokens
      - keys
      - approvalProfiles
      - approvals
      - rules
      - actions
      - triggers
      - resources
      - resourceEvents
      - searchFilters
      - keyItems
      - platformEnums
      - notifications
      - conditions
      - executions
      - complianceRules
      - complianceGroups
      - customAttributes
      - globalMetadata
      - acmeOrders
      - acmeAuthorizations
      - acmeChallenges
      - cmpTransactions
      - endEntityProfiles
      - authenticationProviders
    ResponseMetadataDto:
      type: object
      description: Response metadata attribute instance with content
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        sourceObjects:
          type: array
          description: Source Objects
          items:
            $ref: "#/components/schemas/NameAndUuidDto"
      required:
      - contentType
      - label
      - name
      - sourceObjects
      - type
    SimplifiedRaProfileDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        authorityInstanceUuid:
          type: string
          description: Authority Instance UUID
      required:
      - enabled
      - name
      - uuid
    RoleDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the user
        email:
          type: string
          description: Role contact email
        systemRole:
          type: boolean
          description: "Is system role. True = Yes, False = No"
      required:
      - name
      - systemRole
      - uuid
    UserCertificateDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the certificate
        fingerprint:
          type: string
          description: Fingerprint of the certificate
      required:
      - fingerprint
      - uuid
    UserDetailDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the User
          example: 5b5f0784-2519-11ed-861d-0242ac120002
        username:
          type: string
          description: Username of the user
          example: user1
        firstName:
          type: string
          description: First name of the user
        lastName:
          type: string
          description: Last name of the user
        email:
          type: string
          description: Email of the user
        description:
          type: string
          description: Description of the user
        groups:
          type: array
          description: Groups of the user
          items:
            $ref: "#/components/schemas/NameAndUuidDto"
        enabled:
          type: boolean
          description: "Status of the user. True = Enabled, False = Disabled"
        systemUser:
          type: boolean
          description: "Is System user. True = Yes, False = No"
        certificate:
          $ref: "#/components/schemas/UserCertificateDto"
          description: User Certificate details
        roles:
          type: array
          description: Roles for the user
          items:
            $ref: "#/components/schemas/RoleDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
      required:
      - enabled
      - groups
      - roles
      - systemUser
      - username
      - uuid
