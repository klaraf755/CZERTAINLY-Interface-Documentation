openapi: 3.0.1
info:
  title: CZERTAINLY Cert Manager
  description: REST API for implementations of cert-manager issuer
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: info@czertainly.com
  license:
    name: MIT License
    url: https://github.com/CZERTAINLY/CZERTAINLY/blob/develop/LICENSE.md
  version: 2.14.0
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:41865
  description: Generated server url
tags:
- name: Certificate Inventory
  description: Certificate Inventory API
- name: Authentication Management
  description: Authentication Management API
- name: RA Profile Management
  description: RA Profile Management API
- name: Client Operations v2
  description: Client Operations v2 API
paths:
  /v2/operations/authorities/{authorityUuid}/raProfiles/{raProfileUuid}/certificates:
    post:
      tags:
      - Client Operations v2
      summary: Issue Certificate
      operationId: issueCertificate
      parameters:
      - name: authorityUuid
        in: path
        description: Authority Instance UUID
        required: true
        schema:
          type: string
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientCertificateSignRequestDto"
        required: true
      responses:
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
        "200":
          description: Certificate issued
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCertificateDataResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v1/raProfiles/{raProfileUuid}:
    get:
      tags:
      - RA Profile Management
      summary: Details of RA Profile
      operationId: getRaProfileWithoutAuthority
      parameters:
      - name: raProfileUuid
        in: path
        description: RA Profile UUID
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: RA Profile details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RaProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v1/certificates/{uuid}:
    get:
      tags:
      - Certificate Inventory
      summary: Get Certificate Details
      operationId: getCertificate
      parameters:
      - name: uuid
        in: path
        description: Certificate UUID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Certificate detail retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateDetailDto"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v1/auth/profile:
    get:
      tags:
      - Authentication Management
      summary: Profile Authorization
      operationId: profile
      responses:
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "200":
          description: Authenticate a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailDto"
        "500":
          description: Internal Server Error
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
components:
  schemas:
    AttributeCallback:
      required:
      - callbackContext
      - callbackMethod
      - mappings
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          uniqueItems: true
          type: array
          description: Mappings for the callback method
          items:
            $ref: "#/components/schemas/AttributeCallbackMapping"
      description: Optional definition of callback for getting the content of the
        Attribute based on the action
    AttributeCallbackMapping:
      required:
      - targets
      - to
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: "#/components/schemas/AttributeType"
        attributeContentType:
          $ref: "#/components/schemas/AttributeContentType"
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          uniqueItems: true
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: "#/components/schemas/AttributeValueTarget"
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      description: Mappings for the callback method
    AttributeConstraintType:
      type: string
      description: Attribute Constraint Type
      enum:
      - regExp
      - range
      - dateTime
    AttributeContentType:
      type: string
      description: 'Type of the attribute content. '
      enum:
      - string
      - text
      - integer
      - boolean
      - float
      - date
      - time
      - datetime
      - secret
      - file
      - credential
      - codeblock
      - object
    AttributeType:
      type: string
      description: Type of the attribute. It is optional and must be set only if special
        behaviour is needed.
      enum:
      - data
      - group
      - info
      - meta
      - custom
    AttributeValueTarget:
      type: string
      description: Set of targets for propagating value.
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraint:
      required:
      - data
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
        data:
          type: object
          description: Attribute Constraint Data
      description: Optional regular expressions and constraints used for validating
        the Attribute content
      oneOf:
      - $ref: "#/components/schemas/RegexpAttributeConstraint"
      - $ref: "#/components/schemas/RangeAttributeConstraint"
      - $ref: "#/components/schemas/DateTimeAttributeConstraint"
    BaseAttributeContentDto:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      description: Base Attribute content definition
      oneOf:
      - $ref: "#/components/schemas/BooleanAttributeContent"
      - $ref: "#/components/schemas/CodeBlockAttributeContent"
      - $ref: "#/components/schemas/CredentialAttributeContent"
      - $ref: "#/components/schemas/DateAttributeContent"
      - $ref: "#/components/schemas/DateTimeAttributeContent"
      - $ref: "#/components/schemas/FileAttributeContent"
      - $ref: "#/components/schemas/FloatAttributeContent"
      - $ref: "#/components/schemas/IntegerAttributeContent"
      - $ref: "#/components/schemas/ObjectAttributeContent"
      - $ref: "#/components/schemas/SecretAttributeContent"
      - $ref: "#/components/schemas/StringAttributeContent"
      - $ref: "#/components/schemas/TextAttributeContent"
      - $ref: "#/components/schemas/TimeAttributeContent"
    BooleanAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
    CertificateRequestFormat:
      type: string
      description: Certificate signing request format
      default: pkcs10
      enum:
      - pkcs10
      - crmf
    ClientCertificateSignRequestDto:
      required:
      - attributes
      - request
      type: object
      properties:
        csrAttributes:
          type: array
          description: List of attributes to create CSR. Required if CSR is not provided
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        signatureAttributes:
          type: array
          description: List of attributes to sign the CSR
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        request:
          type: string
          description: Certificate signing request encoded as Base64 string
        format:
          $ref: "#/components/schemas/CertificateRequestFormat"
        tokenProfileUuid:
          type: string
          description: Token Profile UUID. Required if CSR is not uploaded
          format: uuid
        keyUuid:
          type: string
          description: Key UUID. Required if CSR is not uploaded
          format: uuid
        attributes:
          type: array
          description: List of RA Profile related Attributes to issue Certificate
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
    CodeBlockAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CodeBlockAttributeContentData"
    CodeBlockAttributeContentData:
      required:
      - code
      - language
      type: object
      properties:
        language:
          $ref: "#/components/schemas/ProgrammingLanguageEnum"
        code:
          type: string
          description: Block of the code in Base64. Formatting of the code is specified
            by variable language
      description: CodeBlock attribute content data
    CredentialAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CredentialAttributeContentData"
    CredentialAttributeContentData:
      required:
      - attributes
      - kind
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: "#/components/schemas/DataAttribute"
      description: Credential attribute content data
    DataAttribute:
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
        type:
          $ref: "#/components/schemas/AttributeType"
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
        properties:
          $ref: "#/components/schemas/DataAttributeProperties"
        constraints:
          type: array
          description: Optional regular expressions and constraints used for validating
            the Attribute content
          items:
            $ref: "#/components/schemas/BaseAttributeConstraint"
        attributeCallback:
          $ref: "#/components/schemas/AttributeCallback"
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
    DataAttributeProperties:
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
          default: true
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
          default: false
        readOnly:
          type: boolean
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
          default: false
        list:
          type: boolean
          description: Boolean determining if the Attribute contains list of values
            in the content
          default: false
        multiSelect:
          type: boolean
          description: Boolean determining if the Attribute can have multiple values
          default: false
      description: Properties of the Attributes
    DateAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Date attribute value in format yyyy-MM-dd
          format: date
    DateTimeAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
        data:
          $ref: "#/components/schemas/DateTimeAttributeConstraintData"
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          description: Start of the datetime for validation
          format: date-time
        to:
          type: string
          description: End of the datetime for validation
          format: date-time
      description: DateTime Range Attribute Constraint Data
    DateTimeAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: DateTime attribute value in format yyyy-MM-ddTHH:mm:ss.SSSXXX
          format: date-time
    FileAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/FileAttributeContentData"
    FileAttributeContentData:
      required:
      - content
      - fileName
      - mimeType
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          type: string
          description: Type of the file uploaded
      description: File attribute content data
    FloatAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          description: Float attribute value
          format: float
    IntegerAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          description: Integer attribute value
          format: int32
    ObjectAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
    ProgrammingLanguageEnum:
      type: string
      description: Definition of programming languages used for code
      example: "JAVA, PHP, C, etc"
      enum:
      - apacheconf
      - bash
      - basic
      - c
      - csharp
      - cpp
      - css
      - docker
      - fsharp
      - gherkin
      - git
      - go
      - graphql
      - html
      - http
      - ini
      - java
      - javascript
      - json
      - kotlin
      - latex
      - lisp
      - makefile
      - markdown
      - matlab
      - nginx
      - objectivec
      - perl
      - php
      - powershell
      - properties
      - python
      - ruby
      - rust
      - smalltalk
      - sql
      - typescript
      - vbnet
      - xquery
      - xml
      - yaml
    RangeAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
        data:
          $ref: "#/components/schemas/RangeAttributeConstraintData"
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          description: Start of the range for validation
          format: int32
        to:
          type: integer
          description: End of the range for validation
          format: int32
      description: Integer Range Attribute Constraint Data
    RegexpAttributeConstraint:
      required:
      - type
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
    RequestAttributeDto:
      required:
      - content
      - contentType
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
      description: Request attribute to send attribute content for object
    SecretAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/SecretAttributeContentData"
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
      description: Secret attribute content data
    StringAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
    TextAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
    TimeAttributeContent:
      required:
      - data
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Time attribute value in format HH:mm:ss
    AuthenticationServiceExceptionDto:
      required:
      - code
      - message
      - statusCode
      type: object
      properties:
        statusCode:
          type: integer
          description: Status code of the HTTP Request
          format: int32
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
    ErrorMessageDto:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
    ClientCertificateDataResponseDto:
      required:
      - uuid
      type: object
      properties:
        certificateData:
          type: string
          description: Base64 encoded Certificate content
        uuid:
          type: string
          description: UUID of Certificate
    RaProfileDto:
      required:
      - authorityInstanceName
      - authorityInstanceUuid
      - enabled
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of RA Profile
        authorityInstanceUuid:
          type: string
          description: UUID of Authority provider
        authorityInstanceName:
          type: string
          description: Name of Authority instance
        legacyAuthority:
          type: boolean
          description: Has Authority of legacy authority provider
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        attributes:
          type: array
          description: List of RA Profiles attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        enabledProtocols:
          type: array
          description: List of protocols enabled
          items:
            type: string
            description: List of protocols enabled
    ResponseAttributeDto:
      required:
      - contentType
      - label
      - name
      - type
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
      description: Response attribute with content for object it belongs to
    CertificateComplianceResultDto:
      required:
      - connectorName
      - ruleDescription
      - ruleName
      - status
      type: object
      properties:
        connectorName:
          type: string
          description: Name of the Compliance Provider
          example: Provider1
        ruleName:
          type: string
          description: Name of the rule
          example: RuleName
        ruleDescription:
          type: string
          description: Description of the rule
          example: Description sample
        status:
          $ref: "#/components/schemas/ComplianceRuleStatus"
        attributes:
          type: array
          description: Attributes of the rule
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
      description: Certificate compliance check result
    CertificateDetailDto:
      required:
      - certificateContent
      - commonName
      - keySize
      - keyUsage
      - privateKeyAvailability
      - publicKeyAlgorithm
      - signatureAlgorithm
      - state
      - subjectDn
      - subjectType
      - trustedCa
      - uuid
      - validationStatus
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Certificate
        commonName:
          type: string
          description: Certificate common name
        serialNumber:
          type: string
          description: Certificate serial number
        issuerCommonName:
          type: string
          description: Certificate issuer common name
        issuerDn:
          type: string
          description: Issuer DN of the Certificate
        subjectDn:
          type: string
          description: Subject DN of the Certificate
        notBefore:
          type: string
          description: Certificate validity start date
          format: date-time
        notAfter:
          type: string
          description: Certificate expiration date
          format: date-time
        publicKeyAlgorithm:
          type: string
          description: Public key algorithm
        signatureAlgorithm:
          type: string
          description: Certificate signature algorithm
        keySize:
          type: integer
          description: Certificate key size
          format: int32
        state:
          $ref: "#/components/schemas/CertificateState"
        validationStatus:
          $ref: "#/components/schemas/CertificateValidationStatus"
        raProfile:
          $ref: "#/components/schemas/SimplifiedRaProfileDto"
        fingerprint:
          type: string
          description: SHA256 fingerprint of the Certificate
        groups:
          type: array
          description: Groups associated to the Certificate
          items:
            $ref: "#/components/schemas/GroupDto"
        owner:
          type: string
          description: Certificate Owner
        ownerUuid:
          type: string
          description: Certificate Owner UUID
        certificateType:
          $ref: "#/components/schemas/CertificateType"
        issuerSerialNumber:
          type: string
          description: Serial number of the issuer
        complianceStatus:
          $ref: "#/components/schemas/ComplianceStatus"
        issuerCertificateUuid:
          type: string
          description: UUID of the issuer certificate
        privateKeyAvailability:
          type: boolean
          description: Private Key Availability
        trustedCa:
          type: boolean
          description: "Indicator whether CA is marked as trusted, set to null if\
            \ certificate is not CA"
        extendedKeyUsage:
          type: array
          description: Extended key usages
          items:
            type: string
            description: Extended key usages
        keyUsage:
          type: array
          description: Key usages
          items:
            type: string
            description: Key usages
        subjectType:
          $ref: "#/components/schemas/CertificateSubjectType"
        metadata:
          type: array
          description: Certificate metadata
          items:
            $ref: "#/components/schemas/MetadataResponseDto"
        certificateContent:
          type: string
          description: Base64 encoded Certificate content
        subjectAlternativeNames:
          type: object
          additionalProperties:
            type: object
            description: Subject alternative names
          description: Subject alternative names
        locations:
          uniqueItems: true
          type: array
          description: Locations associated to the Certificate
          items:
            $ref: "#/components/schemas/LocationDto"
        nonCompliantRules:
          type: array
          description: Certificate compliance check result
          items:
            $ref: "#/components/schemas/CertificateComplianceResultDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        key:
          $ref: "#/components/schemas/KeyDto"
        certificateRequest:
          $ref: "#/components/schemas/CertificateRequestDto"
        sourceCertificateUuid:
          type: string
          description: Source certificate UUID
          format: uuid
        issueAttributes:
          type: array
          description: List of issue attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        revokeAttributes:
          type: array
          description: List of revoke attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        relatedCertificates:
          type: array
          description: List of related certificates
          items:
            $ref: "#/components/schemas/CertificateDto"
        protocolInfo:
          $ref: "#/components/schemas/CertificateProtocolDto"
    CertificateDto:
      required:
      - commonName
      - keySize
      - privateKeyAvailability
      - publicKeyAlgorithm
      - signatureAlgorithm
      - state
      - subjectDn
      - trustedCa
      - uuid
      - validationStatus
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Certificate
        commonName:
          type: string
          description: Certificate common name
        serialNumber:
          type: string
          description: Certificate serial number
        issuerCommonName:
          type: string
          description: Certificate issuer common name
        issuerDn:
          type: string
          description: Issuer DN of the Certificate
        subjectDn:
          type: string
          description: Subject DN of the Certificate
        notBefore:
          type: string
          description: Certificate validity start date
          format: date-time
        notAfter:
          type: string
          description: Certificate expiration date
          format: date-time
        publicKeyAlgorithm:
          type: string
          description: Public key algorithm
        signatureAlgorithm:
          type: string
          description: Certificate signature algorithm
        keySize:
          type: integer
          description: Certificate key size
          format: int32
        state:
          $ref: "#/components/schemas/CertificateState"
        validationStatus:
          $ref: "#/components/schemas/CertificateValidationStatus"
        raProfile:
          $ref: "#/components/schemas/SimplifiedRaProfileDto"
        fingerprint:
          type: string
          description: SHA256 fingerprint of the Certificate
        groups:
          type: array
          description: Groups associated to the Certificate
          items:
            $ref: "#/components/schemas/GroupDto"
        owner:
          type: string
          description: Certificate Owner
        ownerUuid:
          type: string
          description: Certificate Owner UUID
        certificateType:
          $ref: "#/components/schemas/CertificateType"
        issuerSerialNumber:
          type: string
          description: Serial number of the issuer
        complianceStatus:
          $ref: "#/components/schemas/ComplianceStatus"
        issuerCertificateUuid:
          type: string
          description: UUID of the issuer certificate
        privateKeyAvailability:
          type: boolean
          description: Private Key Availability
        trustedCa:
          type: boolean
          description: "Indicator whether CA is marked as trusted, set to null if\
            \ certificate is not CA"
      description: List of related certificates
    CertificateInLocationDto:
      required:
      - certificateUuid
      - commonName
      - serialNumber
      - state
      - validationStatus
      type: object
      properties:
        certificateUuid:
          type: string
          description: UUID of the Certificate
        state:
          $ref: "#/components/schemas/CertificateState"
        validationStatus:
          $ref: "#/components/schemas/CertificateValidationStatus"
        commonName:
          type: string
          description: Common Name of the Subject DN field of the Certificate
        serialNumber:
          type: string
          description: Serial number in HEX of the Certificate
        metadata:
          type: array
          description: Metadata of the Certificate in Location
          items:
            $ref: "#/components/schemas/MetadataResponseDto"
        pushAttributes:
          type: array
          description: Applied push attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        csrAttributes:
          type: array
          description: Applied issue attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        withKey:
          type: boolean
          description: If the Certificate in Location has associated private key
          default: false
      description: List of Certificates in Location
    CertificateProtocol:
      type: string
      description: Protocol used to issue certificate
      enum:
      - acme
      - scep
      - cmp
    CertificateProtocolDto:
      required:
      - protocol
      - protocolProfileUuid
      type: object
      properties:
        protocol:
          $ref: "#/components/schemas/CertificateProtocol"
        protocolProfileUuid:
          type: string
          description: UUID of the protocol
          format: uuid
        additionalProtocolUuid:
          type: string
          description: "Additional UUID for use of the protocol, for example ACME\
            \ Account UUID in case of ACME protocol"
          format: uuid
      description: Information about protocol used to issue the certificate
    CertificateRequestDto:
      required:
      - commonName
      - content
      - publicKeyAlgorithm
      - signatureAlgorithm
      - subjectDn
      type: object
      properties:
        certificateType:
          $ref: "#/components/schemas/CertificateType"
        certificateRequestFormat:
          $ref: "#/components/schemas/CertificateRequestFormat"
        publicKeyAlgorithm:
          type: string
          description: Public key algorithm
        signatureAlgorithm:
          type: string
          description: Certificate signature algorithm
        content:
          type: string
          description: Certificate request content
        commonName:
          type: string
          description: Certificate common name
        subjectDn:
          type: string
          description: Subject DN of the Certificate
        subjectAlternativeNames:
          type: object
          additionalProperties:
            type: object
            description: Subject alternative names
          description: Subject alternative names
        attributes:
          type: array
          description: CSR Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        signatureAttributes:
          type: array
          description: Signature Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
      description: Certificate request data
    CertificateState:
      type: string
      description: State of the Certificate
      enum:
      - requested
      - rejected
      - pending_approval
      - pending_issue
      - pending_revoke
      - failed
      - issued
      - revoked
      - archived
    CertificateSubjectType:
      type: string
      description: Certificate subject type
      enum:
      - endEntity
      - selfSignedEndEntity
      - intermediateCa
      - rootCa
    CertificateType:
      type: string
      description: Certificate type
      enum:
      - X.509
      - SSH
    CertificateValidationStatus:
      type: string
      description: Current validation status of the certificate
      enum:
      - not_checked
      - failed
      - inactive
      - invalid
      - valid
      - revoked
      - expiring
      - expired
    ComplianceRuleStatus:
      type: string
      description: Status of the rule
      example: nok
      enum:
      - ok
      - nok
      - na
    ComplianceStatus:
      type: string
      description: Certificate compliance status
      enum:
      - not_checked
      - ok
      - nok
      - na
    GroupDto:
      required:
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Group
        email:
          type: string
          description: Group contact email
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
      description: Groups associated to the Key
    KeyAlgorithm:
      type: string
      description: Key Algorithm
      enum:
      - RSA
      - ECDSA
      - FALCON
      - CRYSTALS-Dilithium
      - SPHINCS+
    KeyDto:
      required:
      - creationTime
      - description
      - items
      - name
      - tokenInstanceName
      - tokenInstanceUuid
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Key
        creationTime:
          type: string
          description: "Creation time of the Key. If the key is discovered from the\
            \ connector, then it will be returned"
          format: date-time
        tokenProfileUuid:
          type: string
          description: UUID of the Token Profile
        tokenProfileName:
          type: string
          description: Name of the Token Profile
        tokenInstanceUuid:
          type: string
          description: Token Instance UUID
        tokenInstanceName:
          type: string
          description: Token Instance Name
        owner:
          type: string
          description: Owner of the Key
        ownerUuid:
          type: string
          description: UUID of the owner of the Key
        groups:
          type: array
          description: Groups associated to the key
          items:
            $ref: "#/components/schemas/GroupDto"
        items:
          type: array
          description: Key Items
          items:
            $ref: "#/components/schemas/KeyItemDto"
        associations:
          type: integer
          description: Number of associated objects
          format: int32
      description: Key Pair of the certificate
    KeyFormat:
      type: string
      description: Key Format
      enum:
      - Raw
      - SubjectPublicKeyInfo
      - PrivateKeyInfo
      - EncryptedPrivateKeyInfo
      - Custom
    KeyItemDto:
      required:
      - creationTime
      - description
      - enabled
      - keyAlgorithm
      - keyReferenceUuid
      - keyWrapperUuid
      - name
      - state
      - tokenInstanceName
      - tokenInstanceUuid
      - type
      - usage
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Key
        creationTime:
          type: string
          description: "Creation time of the Key. If the key is discovered from the\
            \ connector, then it will be returned"
          format: date-time
        keyWrapperUuid:
          type: string
          description: UUID of the wrapper object
        tokenProfileUuid:
          type: string
          description: UUID of the Token Profile
        tokenProfileName:
          type: string
          description: Name of the Token Profile
        tokenInstanceUuid:
          type: string
          description: Token Instance UUID
        tokenInstanceName:
          type: string
          description: Token Instance Name
        owner:
          type: string
          description: Owner of the Key
        ownerUuid:
          type: string
          description: UUID of the owner of the Key
        groups:
          type: array
          description: Groups associated to the Key
          items:
            $ref: "#/components/schemas/GroupDto"
        associations:
          type: integer
          description: Number of associated objects
          format: int32
        keyReferenceUuid:
          type: string
          description: UUID of the key item in the Connector
        type:
          $ref: "#/components/schemas/KeyType"
        keyAlgorithm:
          $ref: "#/components/schemas/KeyAlgorithm"
        format:
          $ref: "#/components/schemas/KeyFormat"
        length:
          type: integer
          description: Key Length
          format: int32
        usage:
          type: array
          description: Key Usages
          items:
            $ref: "#/components/schemas/KeyUsage"
        enabled:
          type: boolean
          description: Boolean describing if the key is enabled or not
        state:
          $ref: "#/components/schemas/KeyState"
      description: Key Items
    KeyState:
      type: string
      description: Key State
      enum:
      - pre-active
      - active
      - deactivated
      - compromised
      - destroyed
      - destroyedCompromised
    KeyType:
      type: string
      description: Type of the Key
      enum:
      - Secret
      - Public
      - Private
      - Split
    KeyUsage:
      type: string
      description: Key Usages
      enum:
      - sign
      - verify
      - encrypt
      - decrypt
      - wrap
      - unwrap
    LocationDto:
      required:
      - attributes
      - certificates
      - enabled
      - entityInstanceName
      - entityInstanceUuid
      - name
      - supportKeyManagement
      - supportMultipleEntries
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the Location
        entityInstanceUuid:
          type: string
          description: UUID of Entity instance
        entityInstanceName:
          type: string
          description: Name of Entity instance
        attributes:
          type: array
          description: List of Location attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        supportMultipleEntries:
          type: boolean
          description: If the location supports multiple Certificates
          default: false
        supportKeyManagement:
          type: boolean
          description: If the location supports key management operations
          default: false
        certificates:
          type: array
          description: List of Certificates in Location
          items:
            $ref: "#/components/schemas/CertificateInLocationDto"
        metadata:
          type: array
          description: Location metadata
          items:
            $ref: "#/components/schemas/MetadataResponseDto"
      description: Locations associated to the Certificate
    MetadataResponseDto:
      required:
      - items
      type: object
      properties:
        connectorUuid:
          type: string
          description: UUID of the Connector
        connectorName:
          type: string
          description: Name of the Connector
        sourceObjectType:
          $ref: "#/components/schemas/Resource"
        items:
          type: array
          description: List of Metadata
          items:
            $ref: "#/components/schemas/ResponseMetadataDto"
      description: Metadata response attributes with their source connector
    NameAndUuidDto:
      required:
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
      description: Source Objects
    Resource:
      type: string
      description: Source Object Type
      enum:
      - NONE
      - dashboard
      - settings
      - auditLogs
      - credentials
      - connectors
      - attributes
      - jobs
      - notificationInstances
      - users
      - roles
      - acmeAccounts
      - acmeProfiles
      - scepProfiles
      - cmpProfiles
      - authorities
      - raProfiles
      - certificates
      - certificateRequests
      - groups
      - complianceProfiles
      - discoveries
      - entities
      - locations
      - tokenProfiles
      - tokens
      - keys
      - approvalProfiles
      - approvals
      - rules
      - actions
      - triggers
      - resources
      - resourceEvents
      - searchFilters
      - keyItems
      - platformEnums
      - notifications
      - conditions
      - executions
      - complianceRules
      - complianceGroups
      - customAttributes
      - globalMetadata
      - acmeOrders
      - acmeAuthorizations
      - acmeChallenges
      - cmpTransactions
      - endEntityProfiles
      - authenticationProviders
    ResponseMetadataDto:
      required:
      - contentType
      - label
      - name
      - sourceObjects
      - type
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
        sourceObjects:
          type: array
          description: Source Objects
          items:
            $ref: "#/components/schemas/NameAndUuidDto"
      description: Response metadata attribute instance with content
    SimplifiedRaProfileDto:
      required:
      - enabled
      - name
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        enabled:
          type: boolean
          description: Enabled flag - true = enabled; false = disabled
        authorityInstanceUuid:
          type: string
          description: Authority Instance UUID
      description: RA Profile associated to the Certificate
    RoleDto:
      required:
      - name
      - systemRole
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the user
        email:
          type: string
          description: Role contact email
        systemRole:
          type: boolean
          description: "Is system role. True = Yes, False = No"
      description: Roles for the user
    UserCertificateDto:
      required:
      - fingerprint
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the certificate
        fingerprint:
          type: string
          description: Fingerprint of the certificate
      description: User Certificate details
    UserDetailDto:
      required:
      - enabled
      - groups
      - roles
      - systemUser
      - username
      - uuid
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the User
          example: 5b5f0784-2519-11ed-861d-0242ac120002
        username:
          type: string
          description: Username of the user
          example: user1
        firstName:
          type: string
          description: First name of the user
        lastName:
          type: string
          description: Last name of the user
        email:
          type: string
          description: Email of the user
        description:
          type: string
          description: Description of the user
        groups:
          type: array
          description: Groups of the user
          items:
            $ref: "#/components/schemas/NameAndUuidDto"
        enabled:
          type: boolean
          description: "Status of the user. True = Enabled, False = Disabled"
        systemUser:
          type: boolean
          description: "Is System user. True = Yes, False = No"
        certificate:
          $ref: "#/components/schemas/UserCertificateDto"
        roles:
          type: array
          description: Roles for the user
          items:
            $ref: "#/components/schemas/RoleDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
