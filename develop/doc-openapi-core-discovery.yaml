openapi: 3.1.0
info:
  title: CZERTAINLY Discovery API
  description: REST API for managing Discoveries in the platform
  contact:
    name: CZERTAINLY
    url: https://www.czertainly.com
    email: info@czertainly.com
  license:
    name: MIT License
    url: https://github.com/CZERTAINLY/CZERTAINLY/blob/develop/LICENSE.md
  version: 2.14.1-SNAPSHOT
  x-logo:
    url: images/czertainly_color_H.svg
externalDocs:
  description: CZERTAINLY Documentation
  url: https://docs.czertainly.com
servers:
- url: http://localhost:40707
  description: Generated server url
tags:
- name: Discovery Management
  description: Discovery Management API
paths:
  /v1/discoveries:
    post:
      tags:
      - Discovery Management
      summary: Create Discovery
      operationId: createDiscovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscoveryDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "201":
          description: Discovery Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UuidDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
    delete:
      tags:
      - Discovery Management
      summary: Delete Multiple Discoveries
      operationId: bulkDeleteDiscovery
      requestBody:
        description: Discovery UUIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - c2f685d4-6a3e-11ec-90d6-0242ac120003
            - b9b09548-a97c-4c6a-a06a-e4ee6fc2da98
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "204":
          description: Discoveries deleted
  /v1/discoveries/schedule:
    post:
      tags:
      - Discovery Management
      summary: Schedule Discovery
      operationId: scheduleDiscovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleDiscoveryDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "201":
          description: Discovery Scheduled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UuidDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Error Message 1
              - Error Message 2
  /v1/discoveries/list:
    post:
      tags:
      - Discovery Management
      summary: List Discovery
      operationId: listDiscoveries
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequestDto"
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: List of available Discoveries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscoveryResponseDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v1/discoveries/{uuid}:
    get:
      tags:
      - Discovery Management
      summary: Discovery Details
      operationId: getDiscovery
      parameters:
      - name: uuid
        in: path
        description: Discovery UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Discovery details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscoveryHistoryDetailDto"
    delete:
      tags:
      - Discovery Management
      summary: Delete Discovery
      operationId: deleteDiscovery
      parameters:
      - name: uuid
        in: path
        description: Discovery UUID
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "204":
          description: Discovery deleted
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
  /v1/discoveries/{uuid}/certificates:
    get:
      tags:
      - Discovery Management
      summary: Discovery Details
      operationId: getDiscoveryCertificates
      parameters:
      - name: uuid
        in: path
        description: Discovery UUID
        required: true
        schema:
          type: string
      - name: newlyDiscovered
        in: query
        required: false
        schema:
          type: boolean
      - name: itemsPerPage
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: pageNumber
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Discovery details retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscoveryCertificateResponseDto"
  /v1/discoveries/search:
    get:
      tags:
      - Discovery Management
      summary: Get Discovery searchable fields information
      operationId: getSearchableFieldInformation
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationServiceExceptionDto"
        "500":
          description: Internal Server Error
        "502":
          description: Connector Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "503":
          description: Connector Communication Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
        "200":
          description: Discovery searchable field information retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchFieldDataByGroupDto"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessageDto"
components:
  schemas:
    AttributeCallback:
      type: object
      properties:
        callbackContext:
          type: string
          description: Context part of callback URL
        callbackMethod:
          type: string
          description: HTTP method of the callback
        mappings:
          type: array
          description: Mappings for the callback method
          items:
            $ref: "#/components/schemas/AttributeCallbackMapping"
          uniqueItems: true
      required:
      - callbackContext
      - callbackMethod
      - mappings
    AttributeCallbackMapping:
      type: object
      properties:
        from:
          type: string
          description: Name of the attribute whose value is to be used as value of
            path variable or request param or body field.It is optional and must be
            set only if value is not set.
        attributeType:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the attribute. It is optional and must be set only
            if special behaviour is needed.
        attributeContentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: 'Type of the attribute content. '
        to:
          type: string
          description: Name of the path variable or request param or body field which
            is to be used to assign value of attribute
        targets:
          type: array
          description: Set of targets for propagating value.
          items:
            $ref: "#/components/schemas/AttributeValueTarget"
          uniqueItems: true
        value:
          type: object
          description: Static value to be propagated to targets. It is optional and
            is set only if the value is known at attribute creation time.
      required:
      - targets
      - to
    AttributeConstraintType:
      type: string
      enum:
      - regExp
      - range
      - dateTime
    AttributeContentType:
      type: string
      enum:
      - string
      - text
      - integer
      - boolean
      - float
      - date
      - time
      - datetime
      - secret
      - file
      - credential
      - codeblock
      - object
    AttributeType:
      type: string
      enum:
      - data
      - group
      - info
      - meta
      - custom
    AttributeValueTarget:
      type: string
      enum:
      - pathVariable
      - requestParameter
      - body
    BaseAttributeConstraint:
      type: object
      description: Optional regular expressions and constraints used for validating
        the Attribute content
      oneOf:
      - $ref: "#/components/schemas/RegexpAttributeConstraint"
      - $ref: "#/components/schemas/RangeAttributeConstraint"
      - $ref: "#/components/schemas/DateTimeAttributeConstraint"
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: object
          description: Attribute Constraint Data
      required:
      - data
      - type
    BaseAttributeContentDto:
      type: object
      description: Base Attribute content definition
      oneOf:
      - $ref: "#/components/schemas/BooleanAttributeContent"
      - $ref: "#/components/schemas/CodeBlockAttributeContent"
      - $ref: "#/components/schemas/CredentialAttributeContent"
      - $ref: "#/components/schemas/DateAttributeContent"
      - $ref: "#/components/schemas/DateTimeAttributeContent"
      - $ref: "#/components/schemas/FileAttributeContent"
      - $ref: "#/components/schemas/FloatAttributeContent"
      - $ref: "#/components/schemas/IntegerAttributeContent"
      - $ref: "#/components/schemas/ObjectAttributeContent"
      - $ref: "#/components/schemas/SecretAttributeContent"
      - $ref: "#/components/schemas/StringAttributeContent"
      - $ref: "#/components/schemas/TextAttributeContent"
      - $ref: "#/components/schemas/TimeAttributeContent"
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Content Data
      required:
      - data
    BooleanAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: boolean
          description: Boolean attribute value
      required:
      - data
    CodeBlockAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CodeBlockAttributeContentData"
          description: CodeBlock attribute content data
      required:
      - data
    CodeBlockAttributeContentData:
      type: object
      properties:
        language:
          $ref: "#/components/schemas/ProgrammingLanguageEnum"
          description: Definition of programming languages used for code
          example: "JAVA, PHP, C, etc"
        code:
          type: string
          description: Block of the code in Base64. Formatting of the code is specified
            by variable language
      required:
      - code
      - language
    CredentialAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/CredentialAttributeContentData"
          description: Credential attribute content data
      required:
      - data
    CredentialAttributeContentData:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Credential Kind
          example: "SoftKeyStore, Basic, ApiKey, etc"
        attributes:
          type: array
          description: List of Credential Attributes
          items:
            $ref: "#/components/schemas/DataAttribute"
      required:
      - attributes
      - kind
      - name
      - uuid
    DataAttribute:
      type: object
      description: Data attribute allows to store and transfer dynamic data. Its content
        can be edited and send in requests to store.
      properties:
        version:
          type: integer
          format: int32
          default: "2"
          description: Version of the Attribute
          example: 2
        uuid:
          type: string
          description: UUID of the Attribute for unique identification
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute that is used for identification
          example: Attribute
        description:
          type: string
          description: "Optional description of the Attribute, should contain helper\
            \ text on what is expected"
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        type:
          $ref: "#/components/schemas/AttributeType"
          default: data
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Type of the Content
        properties:
          $ref: "#/components/schemas/DataAttributeProperties"
          description: Properties of the Attributes
        constraints:
          type: array
          description: Optional regular expressions and constraints used for validating
            the Attribute content
          items:
            $ref: "#/components/schemas/BaseAttributeConstraint"
          oneOf:
          - $ref: "#/components/schemas/RegexpAttributeConstraint"
          - $ref: "#/components/schemas/RangeAttributeConstraint"
          - $ref: "#/components/schemas/DateTimeAttributeConstraint"
        attributeCallback:
          $ref: "#/components/schemas/AttributeCallback"
          description: Optional definition of callback for getting the content of
            the Attribute based on the action
      required:
      - contentType
      - name
      - properties
      - type
      - uuid
    DataAttributeProperties:
      type: object
      properties:
        label:
          type: string
          description: Friendly name of the the Attribute
          example: Attribute Name
        visible:
          type: boolean
          default: "true"
          description: "Boolean determining if the Attribute is visible and can be\
            \ displayed, otherwise it should be hidden to the user."
        group:
          type: string
          description: "Group of the Attribute, used for the logical grouping of the\
            \ Attribute"
          example: requiredAttributes
        required:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is required. If true,\
            \ the Attribute must be provided."
        readOnly:
          type: boolean
          default: "false"
          description: "Boolean determining if the Attribute is read only. If true,\
            \ the Attribute content cannot be changed."
        list:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute contains list of values
            in the content
        multiSelect:
          type: boolean
          default: "false"
          description: Boolean determining if the Attribute can have multiple values
      required:
      - label
      - list
      - multiSelect
      - readOnly
      - required
      - visible
    DateAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date
          description: Date attribute value in format yyyy-MM-dd
      required:
      - data
    DateTimeAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/DateTimeAttributeConstraintData"
          description: DateTime Range Attribute Constraint Data
      required:
      - type
    DateTimeAttributeConstraintData:
      type: object
      properties:
        from:
          type: string
          format: date-time
          description: Start of the datetime for validation
        to:
          type: string
          format: date-time
          description: End of the datetime for validation
    DateTimeAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          format: date-time
          description: DateTime attribute value in format yyyy-MM-ddTHH:mm:ss.SSSXXX
      required:
      - data
    DiscoveryDto:
      type: object
      properties:
        name:
          type: string
          description: Discovery name
        attributes:
          type: array
          description: List of Attributes for Discovery
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/RequestAttributeDto"
        connectorUuid:
          type: string
          description: Discovery Provider UUID
        kind:
          type: string
          description: Discovery Kind
        triggers:
          type: array
          description: "List of triggers to be triggered after the discovery is finished,\
            \ triggers will be evaluated in given order"
          items:
            type: string
            format: uuid
      required:
      - attributes
      - connectorUuid
      - kind
      - name
    FileAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/FileAttributeContentData"
          description: File attribute content data
      required:
      - data
    FileAttributeContentData:
      type: object
      properties:
        content:
          type: string
          description: File content
        fileName:
          type: string
          description: Name of the file
        mimeType:
          type: string
          description: Type of the file uploaded
      required:
      - content
      - fileName
      - mimeType
    FloatAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: number
          format: float
          description: Float attribute value
      required:
      - data
    IntegerAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: integer
          format: int32
          description: Integer attribute value
      required:
      - data
    ObjectAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: object
          description: Object attribute content data
      required:
      - data
    ProgrammingLanguageEnum:
      type: string
      enum:
      - apacheconf
      - bash
      - basic
      - c
      - csharp
      - cpp
      - css
      - docker
      - fsharp
      - gherkin
      - git
      - go
      - graphql
      - html
      - http
      - ini
      - java
      - javascript
      - json
      - kotlin
      - latex
      - lisp
      - makefile
      - markdown
      - matlab
      - nginx
      - objectivec
      - perl
      - php
      - powershell
      - properties
      - python
      - ruby
      - rust
      - smalltalk
      - sql
      - typescript
      - vbnet
      - xquery
      - xml
      - yaml
    RangeAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          $ref: "#/components/schemas/RangeAttributeConstraintData"
          description: Integer Range Attribute Constraint Data
      required:
      - type
    RangeAttributeConstraintData:
      type: object
      properties:
        from:
          type: integer
          format: int32
          description: Start of the range for validation
        to:
          type: integer
          format: int32
          description: End of the range for validation
    RegexpAttributeConstraint:
      type: object
      properties:
        description:
          type: string
          description: Description of the constraint
        errorMessage:
          type: string
          description: Error message to be displayed for wrong data
        type:
          $ref: "#/components/schemas/AttributeConstraintType"
          description: Attribute Constraint Type
        data:
          type: string
          description: Regular Expression Attribute Constraint Data
      required:
      - type
    RequestAttributeDto:
      type: object
      description: Request attribute to send attribute content for object
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
      required:
      - content
      - contentType
      - name
      - uuid
    SecretAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          $ref: "#/components/schemas/SecretAttributeContentData"
          description: Secret attribute content data
      required:
      - data
    SecretAttributeContentData:
      type: object
      properties:
        secret:
          type: string
          description: Secret attribute data
        protectionLevel:
          type: string
          description: Level of protection of the data
    StringAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: String attribute value
      required:
      - data
    TextAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Text attribute value
      required:
      - data
    TimeAttributeContent:
      type: object
      properties:
        reference:
          type: string
          description: Content Reference
        data:
          type: string
          description: Time attribute value in format HH:mm:ss
      required:
      - data
    ErrorMessageDto:
      type: object
      properties:
        message:
          type: string
          description: Error message detail
          example: Error message
      required:
      - message
    AuthenticationServiceExceptionDto:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
          description: Status code of the HTTP Request
        code:
          type: string
          description: Code of the result
        message:
          type: string
          description: Exception message
      required:
      - code
      - message
      - statusCode
    UuidDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
      required:
      - uuid
    ScheduleDiscoveryDto:
      type: object
      properties:
        jobName:
          type: string
        cronExpression:
          type: string
        oneTime:
          type: boolean
        request:
          $ref: "#/components/schemas/DiscoveryDto"
    FilterConditionOperator:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
      - GREATER
      - GREATER_OR_EQUAL
      - LESSER
      - LESSER_OR_EQUAL
      - CONTAINS
      - NOT_CONTAINS
      - STARTS_WITH
      - ENDS_WITH
      - EMPTY
      - NOT_EMPTY
      - SUCCESS
      - FAILED
      - UNKNOWN
      - NOT_CHECKED
    FilterFieldSource:
      type: string
      enum:
      - meta
      - custom
      - data
      - property
    SearchFilterRequestDto:
      type: object
      properties:
        fieldSource:
          $ref: "#/components/schemas/FilterFieldSource"
          description: Field group of search filter
        fieldIdentifier:
          type: string
          description: "Field identifier of search filter. List of available fields\
            \ with their identifiers can be retrieved from corresponding endpoint\
            \ `GET /v1/{resource}/search`, e.g.: [**GET /v1/certificates/search**](../core-certificate/#tag/Certificate-Inventory/operation/getSearchableFieldInformation)"
        condition:
          $ref: "#/components/schemas/FilterConditionOperator"
          description: Condition for the search filter
        value:
          type: object
          description: Value to match
      required:
      - condition
      - fieldIdentifier
      - fieldSource
    SearchRequestDto:
      type: object
      properties:
        filters:
          type: array
          description: Certificate filter input
          items:
            $ref: "#/components/schemas/SearchFilterRequestDto"
        itemsPerPage:
          type: integer
          format: int32
          default: "10"
          description: Number of entries per page
          maximum: 1000
        pageNumber:
          type: integer
          format: int32
          default: "1"
          description: Page number for the request
    DiscoveryHistoryDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Discovery Kind
          example: IP-HostName
        status:
          $ref: "#/components/schemas/DiscoveryStatus"
          description: Status of Discovery
        startTime:
          type: string
          format: date-time
          description: Date and time when Discovery started
        endTime:
          type: string
          format: date-time
          description: Date and time when Discovery finished
        totalCertificatesDiscovered:
          type: integer
          format: int32
          default: "0"
          description: Number of certificates that are discovered
        connectorUuid:
          type: string
          description: UUID of the Discovery Provider
        connectorName:
          type: string
          description: Name of the Discovery Provider
      required:
      - connectorName
      - connectorUuid
      - kind
      - name
      - status
      - uuid
    DiscoveryResponseDto:
      type: object
      properties:
        discoveries:
          type: array
          description: Discoveries
          items:
            $ref: "#/components/schemas/DiscoveryHistoryDto"
        itemsPerPage:
          type: integer
          format: int32
          description: Number of entries per page
        pageNumber:
          type: integer
          format: int32
          description: Page number for the request
        totalPages:
          type: integer
          format: int32
          description: Number of pages available
        totalItems:
          type: integer
          format: int64
          description: Number of items available
      required:
      - discoveries
      - itemsPerPage
      - pageNumber
      - totalItems
      - totalPages
    DiscoveryStatus:
      type: string
      enum:
      - inProgress
      - processing
      - failed
      - completed
      - warning
    DiscoveryHistoryDetailDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        kind:
          type: string
          description: Discovery Kind
          example: IP-HostName
        status:
          $ref: "#/components/schemas/DiscoveryStatus"
          description: Status of Discovery
        connectorStatus:
          $ref: "#/components/schemas/DiscoveryStatus"
          description: Status of Discovery returned by connector
        message:
          type: string
          description: Failure/Success Messages
          example: Failed due to network connectivity issues
        startTime:
          type: string
          format: date-time
          description: Date and time when Discovery started
        endTime:
          type: string
          format: date-time
          description: Date and time when Discovery finished
        totalCertificatesDiscovered:
          type: integer
          format: int32
          default: "0"
          description: Number of certificates that are discovered
        connectorTotalCertificatesDiscovered:
          type: integer
          format: int32
          default: "0"
          description: Number of certificates that were discovered by connector
        connectorUuid:
          type: string
          description: UUID of the Discovery Provider
        connectorName:
          type: string
          description: Name of the Discovery Provider
        attributes:
          type: array
          description: List of Discovery Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        customAttributes:
          type: array
          description: List of Custom Attributes
          items:
            $ref: "#/components/schemas/ResponseAttributeDto"
        metadata:
          type: array
          description: Metadata of the Discovery
          items:
            $ref: "#/components/schemas/MetadataResponseDto"
        triggers:
          type: array
          description: List of associated triggers
          items:
            $ref: "#/components/schemas/TriggerDto"
      required:
      - attributes
      - connectorName
      - connectorStatus
      - connectorUuid
      - kind
      - name
      - status
      - triggers
      - uuid
    MetadataResponseDto:
      type: object
      description: Metadata response attributes with their source connector
      properties:
        connectorUuid:
          type: string
          description: UUID of the Connector
        connectorName:
          type: string
          description: Name of the Connector
        sourceObjectType:
          $ref: "#/components/schemas/Resource"
          description: Source Object Type
        items:
          type: array
          description: List of Metadata
          items:
            $ref: "#/components/schemas/ResponseMetadataDto"
      required:
      - items
    NameAndUuidDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
      required:
      - name
      - uuid
    Resource:
      type: string
      enum:
      - NONE
      - dashboard
      - settings
      - auditLogs
      - credentials
      - connectors
      - attributes
      - jobs
      - notificationInstances
      - users
      - roles
      - acmeAccounts
      - acmeProfiles
      - scepProfiles
      - cmpProfiles
      - authorities
      - raProfiles
      - certificates
      - certificateRequests
      - groups
      - complianceProfiles
      - discoveries
      - entities
      - locations
      - tokenProfiles
      - tokens
      - keys
      - approvalProfiles
      - approvals
      - rules
      - actions
      - triggers
      - resources
      - resourceEvents
      - searchFilters
      - keyItems
      - platformEnums
      - notifications
      - conditions
      - executions
      - complianceRules
      - complianceGroups
      - customAttributes
      - globalMetadata
      - acmeOrders
      - acmeAuthorizations
      - acmeChallenges
      - cmpTransactions
      - endEntityProfiles
      - authenticationProviders
    ResponseAttributeDto:
      type: object
      description: Response attribute with content for object it belongs to
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
      required:
      - contentType
      - label
      - name
      - type
    ResponseMetadataDto:
      type: object
      description: Response metadata attribute instance with content
      properties:
        uuid:
          type: string
          description: UUID of the Attribute
          example: 166b5cf52-63f2-11ec-90d6-0242ac120003
        name:
          type: string
          description: Name of the Attribute
          example: Attribute
        label:
          type: string
          description: Label of the the Attribute
          example: Attribute Name
        type:
          $ref: "#/components/schemas/AttributeType"
          description: Type of the Attribute
        contentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Content Type of the Attribute
          example: Attribute
        content:
          type: array
          description: Content of the Attribute
          items:
            $ref: "#/components/schemas/BaseAttributeContentDto"
          oneOf:
          - $ref: "#/components/schemas/BooleanAttributeContent"
          - $ref: "#/components/schemas/CodeBlockAttributeContent"
          - $ref: "#/components/schemas/CredentialAttributeContent"
          - $ref: "#/components/schemas/DateAttributeContent"
          - $ref: "#/components/schemas/DateTimeAttributeContent"
          - $ref: "#/components/schemas/FileAttributeContent"
          - $ref: "#/components/schemas/FloatAttributeContent"
          - $ref: "#/components/schemas/IntegerAttributeContent"
          - $ref: "#/components/schemas/ObjectAttributeContent"
          - $ref: "#/components/schemas/SecretAttributeContent"
          - $ref: "#/components/schemas/StringAttributeContent"
          - $ref: "#/components/schemas/TextAttributeContent"
          - $ref: "#/components/schemas/TimeAttributeContent"
        sourceObjects:
          type: array
          description: Source Objects
          items:
            $ref: "#/components/schemas/NameAndUuidDto"
      required:
      - contentType
      - label
      - name
      - sourceObjects
      - type
    TriggerDto:
      type: object
      properties:
        uuid:
          type: string
          description: Object identifier
          example: 7b55ge1c-844f-11dc-a8a3-0242ac120002
        name:
          type: string
          description: Object Name
          example: Name
        description:
          type: string
          description: Description of the trigger
        type:
          $ref: "#/components/schemas/TriggerType"
          description: Type of the trigger
        resource:
          $ref: "#/components/schemas/Resource"
          description: Resource associated with the trigger
        ignoreTrigger:
          type: boolean
          description: "Flag if to ignore object when trigger rules are matched and\
            \ do not perform any actions and stop evaluating other triggers. Based\
            \ on context could have other implications to object processing. If ignore\
            \ is set, trigger does not have any actions."
        event:
          type: string
          description: Event that should fire trigger
          enum:
          - discoveryFinished
        eventResource:
          $ref: "#/components/schemas/Resource"
          description: Resource associated with trigger event
      required:
      - ignoreTrigger
      - name
      - resource
      - type
      - uuid
    TriggerType:
      type: string
      enum:
      - event
      - manual
    DiscoveryCertificateDto:
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Certificate
        inventoryUuid:
          type: string
          description: UUID of the Certificate in Certificate inventory
        commonName:
          type: string
          description: Certificate common name
        serialNumber:
          type: string
          description: Certificate Serial Number
        issuerCommonName:
          type: string
          description: Issuer common name
        notBefore:
          type: string
          format: date-time
          description: Certificate validity start date
        notAfter:
          type: string
          format: date-time
          description: Certificate expiration date
        fingerprint:
          type: string
          description: SHA256 thumbprint of the certificate
        certificateContent:
          type: string
          description: Base64 encoded Certificate content
        newlyDiscovered:
          type: boolean
          description: Boolean representing if the certificate is newly discovered.
            True - Certificate is newly discoveredfalse - Certificate was already
            available in the inventory
        processed:
          type: boolean
          description: Indicator whether the discovery certificate has already been
            processed.
        processedError:
          type: string
          description: Error message in case of failed processing of the discovery
            certificate.
      required:
      - certificateContent
      - commonName
      - fingerprint
      - issuerCommonName
      - newlyDiscovered
      - notAfter
      - notBefore
      - processed
      - serialNumber
      - uuid
    DiscoveryCertificateResponseDto:
      type: object
      properties:
        certificates:
          type: array
          description: Certificates
          items:
            $ref: "#/components/schemas/DiscoveryCertificateDto"
        itemsPerPage:
          type: integer
          format: int32
          description: Number of entries per page
        pageNumber:
          type: integer
          format: int32
          description: Page number for the request
        totalPages:
          type: integer
          format: int32
          description: Number of pages available
        totalItems:
          type: integer
          format: int64
          description: Number of items available
      required:
      - certificates
      - itemsPerPage
      - pageNumber
      - totalItems
      - totalPages
    FilterFieldType:
      type: string
      enum:
      - string
      - number
      - list
      - date
      - datetime
      - boolean
    PlatformEnum:
      type: string
      enum:
      - Resource
      - FilterConditionOperator
      - FilterFieldType
      - FilterFieldSource
      - SettingsSection
      - NotificationType
      - AuthType
      - HealthStatus
      - ConnectorStatus
      - FunctionGroupCode
      - CertificateType
      - CertificateState
      - CertificateValidationStatus
      - CertificateFormat
      - CertificateFormatEncoding
      - CertificateValidationCheck
      - CertificateRevocationReason
      - CertificateRequestFormat
      - DiscoveryStatus
      - CertificateProtocol
      - CertificateSubjectType
      - KeyAlgorithm
      - KeyFormat
      - KeyState
      - KeyType
      - KeyUsage
      - KeyRequestType
      - KeyCompromiseReason
      - TokenInstanceStatus
      - DigestAlgorithm
      - RsaSignatureScheme
      - RsaEncryptionScheme
      - ComplianceStatus
      - ComplianceRuleStatus
      - AccountStatus
      - ProtectionMethod
      - CmpProfileVariant
      - AttributeType
      - AttributeContentType
      - AttributeConstraintType
      - AttributeValueTarget
      - ProgrammingLanguageEnum
      - SchedulerJobExecutionStatus
      - TriggerType
      - ConditionType
      - ExecutionType
      - ResourceEvent
      - Module
      - ActorType
      - AuthMethod
      - Operation
      - OperationResult
    SearchFieldDataByGroupDto:
      type: object
      properties:
        filterFieldSource:
          $ref: "#/components/schemas/FilterFieldSource"
          description: Search group
        searchFieldData:
          type: array
          description: List of search fields for specified search group
          items:
            $ref: "#/components/schemas/SearchFieldDataDto"
      required:
      - filterFieldSource
    SearchFieldDataDto:
      type: object
      properties:
        fieldIdentifier:
          type: string
          description: Identifier of field to search
        fieldLabel:
          type: string
          description: Label for the field
        type:
          $ref: "#/components/schemas/FilterFieldType"
          description: Type of the field
        conditions:
          type: array
          description: List of available conditions for the field
          items:
            $ref: "#/components/schemas/FilterConditionOperator"
        platformEnum:
          $ref: "#/components/schemas/PlatformEnum"
          description: Platform enum of the field values
        attributeContentType:
          $ref: "#/components/schemas/AttributeContentType"
          description: Attribute filter field content type
        value:
          type: object
          description: Available values for the field
        multiValue:
          type: boolean
          description: "Multivalue flag. true = yes, false = no"
      required:
      - conditions
      - fieldIdentifier
      - fieldLabel
      - type
